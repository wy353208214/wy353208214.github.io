<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王洋</title>
  
  <subtitle>Kitkat</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.hackyang.cn/"/>
  <updated>2018-12-05T01:15:48.265Z</updated>
  <id>http://blog.hackyang.cn/</id>
  
  <author>
    <name>王洋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sublime快捷键</title>
    <link href="http://blog.hackyang.cn/2018/01/19/Sublime%20Text%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://blog.hackyang.cn/2018/01/19/Sublime Text快捷键/</id>
    <published>2018-01-19T12:00:22.000Z</published>
    <updated>2018-12-05T01:15:48.265Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Sublime快捷键"><a href="#Sublime快捷键" class="headerlink" title="Sublime快捷键"></a>Sublime快捷键</h4><h5 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h5><h6 id="在下一行插入新行。即使光标不在行尾，也能快速向下插入一行"><a href="#在下一行插入新行。即使光标不在行尾，也能快速向下插入一行" class="headerlink" title="在下一行插入新行。即使光标不在行尾，也能快速向下插入一行"></a>在下一行插入新行。即使光标不在行尾，也能快速向下插入一行</h6><p><code>Ctrl+Enter</code></p><h6 id="在上一行插入新行。即使光标不在行首，也能快速向上插入一行"><a href="#在上一行插入新行。即使光标不在行首，也能快速向上插入一行" class="headerlink" title="在上一行插入新行。即使光标不在行首，也能快速向上插入一行"></a>在上一行插入新行。即使光标不在行首，也能快速向上插入一行</h6><p><code>Ctrl+Shift+Enter</code></p><h6 id="复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行"><a href="#复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行" class="headerlink" title="复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行"></a>复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行</h6><p><code>Ctrl+Shift+D</code><br><a id="more"></a></p><h5 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h5><h6 id="合并选中的多行代码为一行。例如：将多行格式的CSS属性合并为一行。"><a href="#合并选中的多行代码为一行。例如：将多行格式的CSS属性合并为一行。" class="headerlink" title="合并选中的多行代码为一行。例如：将多行格式的CSS属性合并为一行。"></a>合并选中的多行代码为一行。例如：将多行格式的CSS属性合并为一行。</h6><p><code>Ctrl+J</code></p><h6 id="粘贴并保持缩进"><a href="#粘贴并保持缩进" class="headerlink" title="粘贴并保持缩进"></a>粘贴并保持缩进</h6><p><code>Ctrl+Shift+V</code></p><h6 id="使用标签包裹一行，Web开发利器"><a href="#使用标签包裹一行，Web开发利器" class="headerlink" title="使用标签包裹一行，Web开发利器"></a>使用标签包裹一行，Web开发利器</h6><p><code>Alt+Shift+W</code></p><h6 id="移除与光标所在位置相关的父标签。对清除标记很有帮助。"><a href="#移除与光标所在位置相关的父标签。对清除标记很有帮助。" class="headerlink" title="移除与光标所在位置相关的父标签。对清除标记很有帮助。"></a>移除与光标所在位置相关的父标签。对清除标记很有帮助。</h6><p><code>Ctrl+Shift+;</code></p><h6 id="按Ctrl，依次点击或选取，可需要编辑的多个位置"><a href="#按Ctrl，依次点击或选取，可需要编辑的多个位置" class="headerlink" title="按Ctrl，依次点击或选取，可需要编辑的多个位置"></a>按Ctrl，依次点击或选取，可需要编辑的多个位置</h6><p><code>Ctrl + 左键点击</code></p><h6 id="Esc-退出光标多行选择，退出搜索框，命令框等"><a href="#Esc-退出光标多行选择，退出搜索框，命令框等" class="headerlink" title="Esc 退出光标多行选择，退出搜索框，命令框等"></a>Esc 退出光标多行选择，退出搜索框，命令框等</h6><p><code>Ctrl+T 左右字母互换</code></p><h6 id="开启-关闭侧边栏"><a href="#开启-关闭侧边栏" class="headerlink" title="开启/关闭侧边栏"></a>开启/关闭侧边栏</h6><p><code>Ctrl+K+B</code></p><h5 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h5><h6 id="选中光标所占的文本，继续操作则会选中下一个相同的文本"><a href="#选中光标所占的文本，继续操作则会选中下一个相同的文本" class="headerlink" title="选中光标所占的文本，继续操作则会选中下一个相同的文本"></a>选中光标所占的文本，继续操作则会选中下一个相同的文本</h6><p><code>Ctrl+D</code></p><h6 id="选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。例如：快速选中并更改所有相同的变量名、函数名等。"><a href="#选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。例如：快速选中并更改所有相同的变量名、函数名等。" class="headerlink" title="选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。例如：快速选中并更改所有相同的变量名、函数名等。"></a>选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。例如：快速选中并更改所有相同的变量名、函数名等。</h6><p><code>Alt+F3</code></p><h6 id="选中整行，继续操作则继续选择下一行，效果和-Shift-↓-效果一样。"><a href="#选中整行，继续操作则继续选择下一行，效果和-Shift-↓-效果一样。" class="headerlink" title="选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。"></a>选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。</h6><p><code>Ctrl+L</code></p><h6 id="先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。"><a href="#先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。" class="headerlink" title="先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。"></a>先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</h6><p><code>Ctrl+Shift+L</code></p><h6 id="选择括号内的内容（继续选择父括号）。例如：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。"><a href="#选择括号内的内容（继续选择父括号）。例如：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。" class="headerlink" title="选择括号内的内容（继续选择父括号）。例如：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。"></a>选择括号内的内容（继续选择父括号）。例如：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</h6><p><code>Ctrl+Shift+M</code></p><h6 id="向上选中多行。"><a href="#向上选中多行。" class="headerlink" title="向上选中多行。"></a>向上选中多行。</h6><p><code>shift+↑</code></p><h6 id="向下选中多行。"><a href="#向下选中多行。" class="headerlink" title="向下选中多行。"></a>向下选中多行。</h6><p><code>shift+↓</code></p><h6 id="向左选中文本。"><a href="#向左选中文本。" class="headerlink" title="向左选中文本。"></a>向左选中文本。</h6><p><code>Shift+←</code></p><h6 id="向右选中文本。"><a href="#向右选中文本。" class="headerlink" title="向右选中文本。"></a>向右选中文本。</h6><p><code>Shift+→</code></p><h6 id="向左单位性地选中文本。"><a href="#向左单位性地选中文本。" class="headerlink" title="向左单位性地选中文本。"></a>向左单位性地选中文本。</h6><p><code>Ctrl+Shift+←</code></p><h6 id="向右单位性地选中文本。"><a href="#向右单位性地选中文本。" class="headerlink" title="向右单位性地选中文本。"></a>向右单位性地选中文本。</h6><p><code>Ctrl+Shift+→</code></p><h5 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h5><h6 id="光标移动至括号内结束或开始的位置。"><a href="#光标移动至括号内结束或开始的位置。" class="headerlink" title="光标移动至括号内结束或开始的位置。"></a>光标移动至括号内结束或开始的位置。</h6><p><code>Ctrl+M</code></p><h6 id="向左单位性地移动光标，快速移动光标。"><a href="#向左单位性地移动光标，快速移动光标。" class="headerlink" title="向左单位性地移动光标，快速移动光标。"></a>向左单位性地移动光标，快速移动光标。</h6><p><code>Ctrl+←</code></p><h6 id="向右单位性地移动光标，快速移动光标。"><a href="#向右单位性地移动光标，快速移动光标。" class="headerlink" title="向右单位性地移动光标，快速移动光标。"></a>向右单位性地移动光标，快速移动光标。</h6><p><code>Ctrl+→</code></p><h6 id="输入数字跳转到指定行。与-Ctrl-P-输人-：-再输入数字一样的功能。"><a href="#输入数字跳转到指定行。与-Ctrl-P-输人-：-再输入数字一样的功能。" class="headerlink" title="输入数字跳转到指定行。与 Ctrl + P 输人 ： 再输入数字一样的功能。"></a>输入数字跳转到指定行。与 Ctrl + P 输人 ： 再输入数字一样的功能。</h6><p><code>Ctrl+G</code></p><h5 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h5><h6 id="选中代码，按下快捷键，折叠代码。"><a href="#选中代码，按下快捷键，折叠代码。" class="headerlink" title="选中代码，按下快捷键，折叠代码。"></a>选中代码，按下快捷键，折叠代码。</h6><p><code>Ctrl+Shift+[</code></p><h6 id="选中代码，按下快捷键，展开代码。"><a href="#选中代码，按下快捷键，展开代码。" class="headerlink" title="选中代码，按下快捷键，展开代码。"></a>选中代码，按下快捷键，展开代码。</h6><p><code>Ctrl+Shift+]</code></p><h6 id="展开所有折叠代码。"><a href="#展开所有折叠代码。" class="headerlink" title="展开所有折叠代码。"></a>展开所有折叠代码。</h6><p><code>Ctrl+K+0</code></p><h5 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h5><h6 id="向右缩进。"><a href="#向右缩进。" class="headerlink" title="向右缩进。"></a>向右缩进。</h6><p><code>Tab</code></p><h6 id="向左缩进。"><a href="#向左缩进。" class="headerlink" title="向左缩进。"></a>向左缩进。</h6><p><code>Shift+Tab</code></p><h6 id="向右缩进。-1"><a href="#向右缩进。-1" class="headerlink" title="向右缩进。"></a>向右缩进。</h6><p><code>Ctrl+]</code></p><h6 id="向左不缩进。"><a href="#向左不缩进。" class="headerlink" title="向左不缩进。"></a>向左不缩进。</h6><p><code>Ctrl+[</code></p><h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5><h6 id="注释单行。"><a href="#注释单行。" class="headerlink" title="注释单行。"></a>注释单行。</h6><p><code>Ctrl+/</code></p><h6 id="注释多行。"><a href="#注释多行。" class="headerlink" title="注释多行。"></a>注释多行。</h6><p><code>Ctrl+Shift+/</code></p><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><h6 id="从光标处开始删除代码至行尾。"><a href="#从光标处开始删除代码至行尾。" class="headerlink" title="从光标处开始删除代码至行尾。"></a>从光标处开始删除代码至行尾。</h6><p><code>Ctrl+K+K</code></p><h6 id="删除整行。"><a href="#删除整行。" class="headerlink" title="删除整行。"></a>删除整行。</h6><p><code>Ctrl+Shift+K</code></p><h5 id="撤消"><a href="#撤消" class="headerlink" title="撤消"></a>撤消</h5><h6 id="撤销。"><a href="#撤销。" class="headerlink" title="撤销。"></a>撤销。</h6><p><code>Ctrl+Z</code></p><h6 id="恢复撤销。"><a href="#恢复撤销。" class="headerlink" title="恢复撤销。"></a>恢复撤销。</h6><p><code>Ctrl+Y</code></p><h6 id="软撤销，撤销光标位置。"><a href="#软撤销，撤销光标位置。" class="headerlink" title="软撤销，撤销光标位置。"></a>软撤销，撤销光标位置。</h6><p><code>Ctrl+U</code></p><h5 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h5><h6 id="转换大写。"><a href="#转换大写。" class="headerlink" title="转换大写。"></a>转换大写。</h6><p><code>Ctrl+K+U</code></p><h6 id="转换小写。"><a href="#转换小写。" class="headerlink" title="转换小写。"></a>转换小写。</h6><p><code>Ctrl+K+L</code></p><h5 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h5><h6 id="打开底部搜索框，查找关键字。如果先选中文本再按快捷键，则自动开始查找。"><a href="#打开底部搜索框，查找关键字。如果先选中文本再按快捷键，则自动开始查找。" class="headerlink" title="打开底部搜索框，查找关键字。如果先选中文本再按快捷键，则自动开始查找。"></a>打开底部搜索框，查找关键字。如果先选中文本再按快捷键，则自动开始查找。</h6><p><code>Ctrl+F</code></p><h6 id="查找并替换。"><a href="#查找并替换。" class="headerlink" title="查找并替换。"></a>查找并替换。</h6><p><code>Ctrl+H</code></p><h6 id="在文件夹内查找，允许添加多个文件夹进行查找，同时支持替换。"><a href="#在文件夹内查找，允许添加多个文件夹进行查找，同时支持替换。" class="headerlink" title="在文件夹内查找，允许添加多个文件夹进行查找，同时支持替换。"></a>在文件夹内查找，允许添加多个文件夹进行查找，同时支持替换。</h6><p><code>Ctrl+shift+F</code></p><h6 id="打开搜索框。该搜索框有强大的搜索功能："><a href="#打开搜索框。该搜索框有强大的搜索功能：" class="headerlink" title="打开搜索框。该搜索框有强大的搜索功能："></a>打开搜索框。该搜索框有强大的搜索功能：</h6><p><code>Ctrl+P</code></p><h6 id="打开搜索框，自动带-，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。"><a href="#打开搜索框，自动带-，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。" class="headerlink" title="打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。"></a>打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</h6><p><code>Ctrl+R</code></p><blockquote><p>1、输入当前项目中的文件名，快速搜索文件，<br>2、输入@和关键字，查找文件中函数名，<br>3、输入：和数字，跳转到文件中该行代码，<br>4、输入#和关键字，查找变量名。</p></blockquote><h6 id="打开搜索框，自动带-，输入关键字，查找文件中的变量名、属性名等。"><a href="#打开搜索框，自动带-，输入关键字，查找文件中的变量名、属性名等。" class="headerlink" title="打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。"></a>打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</h6><p><code>Ctrl+：</code></p><h6 id="打开命令框。场景栗子：打开命名框，输入关键字，调用sublime-text或插件的功能，例如使用package安装插件。"><a href="#打开命令框。场景栗子：打开命名框，输入关键字，调用sublime-text或插件的功能，例如使用package安装插件。" class="headerlink" title="打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。"></a>打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</h6><p><code>Ctrl+Shift+P</code></p><h5 id="分屏"><a href="#分屏" class="headerlink" title="分屏"></a>分屏</h5><h6 id="窗口分屏，恢复默认1屏（非小键盘的数字）。"><a href="#窗口分屏，恢复默认1屏（非小键盘的数字）。" class="headerlink" title="窗口分屏，恢复默认1屏（非小键盘的数字）。"></a>窗口分屏，恢复默认1屏（非小键盘的数字）。</h6><p><code>Alt+Shift+1</code></p><h6 id="左右分屏-2列。"><a href="#左右分屏-2列。" class="headerlink" title="左右分屏-2列。"></a>左右分屏-2列。</h6><p><code>Alt+Shift+2</code></p><h6 id="左右分屏-3列。"><a href="#左右分屏-3列。" class="headerlink" title="左右分屏-3列。"></a>左右分屏-3列。</h6><p><code>Alt+Shift+3</code></p><h6 id="左右分屏-4列。"><a href="#左右分屏-4列。" class="headerlink" title="左右分屏-4列。"></a>左右分屏-4列。</h6><p><code>Alt+Shift+4</code></p><h6 id="等分4屏。"><a href="#等分4屏。" class="headerlink" title="等分4屏。"></a>等分4屏。</h6><p><code>Alt+Shift+5</code></p><h6 id="垂直分屏-2屏。"><a href="#垂直分屏-2屏。" class="headerlink" title="垂直分屏-2屏。"></a>垂直分屏-2屏。</h6><p><code>Alt+Shift+8</code></p><h6 id="垂直分屏-3屏。"><a href="#垂直分屏-3屏。" class="headerlink" title="垂直分屏-3屏。"></a>垂直分屏-3屏。</h6><p><code>Alt+Shift+9</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Sublime快捷键&quot;&gt;&lt;a href=&quot;#Sublime快捷键&quot; class=&quot;headerlink&quot; title=&quot;Sublime快捷键&quot;&gt;&lt;/a&gt;Sublime快捷键&lt;/h4&gt;&lt;h5 id=&quot;插入&quot;&gt;&lt;a href=&quot;#插入&quot; class=&quot;headerlink&quot; title=&quot;插入&quot;&gt;&lt;/a&gt;插入&lt;/h5&gt;&lt;h6 id=&quot;在下一行插入新行。即使光标不在行尾，也能快速向下插入一行&quot;&gt;&lt;a href=&quot;#在下一行插入新行。即使光标不在行尾，也能快速向下插入一行&quot; class=&quot;headerlink&quot; title=&quot;在下一行插入新行。即使光标不在行尾，也能快速向下插入一行&quot;&gt;&lt;/a&gt;在下一行插入新行。即使光标不在行尾，也能快速向下插入一行&lt;/h6&gt;&lt;p&gt;&lt;code&gt;Ctrl+Enter&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&quot;在上一行插入新行。即使光标不在行首，也能快速向上插入一行&quot;&gt;&lt;a href=&quot;#在上一行插入新行。即使光标不在行首，也能快速向上插入一行&quot; class=&quot;headerlink&quot; title=&quot;在上一行插入新行。即使光标不在行首，也能快速向上插入一行&quot;&gt;&lt;/a&gt;在上一行插入新行。即使光标不在行首，也能快速向上插入一行&lt;/h6&gt;&lt;p&gt;&lt;code&gt;Ctrl+Shift+Enter&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&quot;复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行&quot;&gt;&lt;a href=&quot;#复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行&quot; class=&quot;headerlink&quot; title=&quot;复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行&quot;&gt;&lt;/a&gt;复制光标所在整行，插入到下一行。即先将光标所在行复制，然后再插入到光标所在的下一行&lt;/h6&gt;&lt;p&gt;&lt;code&gt;Ctrl+Shift+D&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spring boot笔记（二）</title>
    <link href="http://blog.hackyang.cn/2017/11/17/Spring%20boot%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://blog.hackyang.cn/2017/11/17/Spring boot笔记（二）/</id>
    <published>2017-11-17T13:02:24.000Z</published>
    <updated>2018-12-05T01:15:48.264Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Spring-boot-Restful-API返回JSON"><a href="#Spring-boot-Restful-API返回JSON" class="headerlink" title="Spring boot Restful API返回JSON"></a>Spring boot Restful API返回JSON</h5><p>首先贴一个完整项目目录图，方便后面分析<br><img src="https://78.media.tumblr.com/50adb1b8bee25ab377262822df44b7ab/tumblr_ozjwhv556M1strv3do1_1280.png" alt=""></p><p>一、 先打开Mysql，然后创建一个数据库<code>zyuser</code>，然后创建一个表<code>zyuser_user</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`zyuser_user`</span> (</span><br><span class="line">  <span class="string">`userid`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱(可用于登陆)'</span>,</span><br><span class="line">  <span class="string">`realname`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`gender`</span> tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`userid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1000000401</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>二、 定义2个model，一个是用户<strong>User</strong>，一个是用来展示错误的<strong>Error</strong><br>User类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userid;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String realname;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> gender;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserid</span><span class="params">(String userid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userid = userid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRealname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> realname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRealname</span><span class="params">(String realname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.realname = realname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(<span class="keyword">int</span> gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"userid='"</span> + userid + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", email='"</span> + email + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", realname='"</span> + realname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", gender="</span> + gender +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>三、 我们定义1个service层即Dao，数据库操作层<strong>UserDao</strong>接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select userid, email, realname, gender from zyuser_user where userid=#&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">User <span class="title">getUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里大家还记得在第一节中提到的application.porperties中定义的mybatis配置属性吗？<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/zyuser?useUnicode=true&amp;characterEncoding=utf-8</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=123456</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>Mybatis注解扫描的包路径</span><br><span class="line">mybatis.typeAliasesPackage=com.hackyang.springbootdemo.service</span><br><span class="line"><span class="meta">#</span>这里没通过mybatis的mapper.xml文件映射，就注释掉，如果用到xml的话这里就要打开，指向mybatis的mapper.xml文件所在目录</span><br><span class="line"><span class="meta">#</span>mybatis.mapperLocations=classpath:mapper/*.xml</span><br></pre></td></tr></table></figure></p><p>我们这里指向IserDao所在的package目录即可。<br>另外，还要在Application的入口文件上增加<code>@MapperScan</code>注解，指向扫描的Dao目录<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.hackyang.springbootdemo.service"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootdemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringbootdemoApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>四、 最后回到UserController类上，这里大家应该很熟悉了，我就贴上代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">User <span class="title">getUser</span><span class="params">(@PathVariable <span class="keyword">int</span> id)</span> <span class="keyword">throws</span> NullPointerException </span>&#123;</span><br><span class="line">        User user = userDao.getUser(id);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"用户不存在"</span>);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>解释下代码，@RestController被称为构造型（stereotype）注解。它为阅读代码的人提供暗示（这是一个支持REST的控制器），对于Spring，该类扮演了一个特殊角色，由于设计的是restful风格的api，因此支持PathInfo模式，通过<code>@Autowired</code>注入userDao，然后Mybatis帮我们完成一系列的数据库操作，在getUser函数中返回一个User对象，为了返回一个Json对象我们需要在pom文件中引入jackson库。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这样Controller就能直接返回json字符串，因为配置了jackson处理器，spring会帮我们自动转换，是不是很简单呀！<br>好了我们测试一遍，先运行起来spring boot，然后在浏览器访问：<em><a href="http://localhost:8080/user/115" target="_blank" rel="noopener">http://localhost:8080/user/115</a></em><br><img src="https://78.media.tumblr.com/e1137da01a4d8bbce0c21a22371567c7/tumblr_ozjwhv556M1strv3do2_1280.png" alt=""><br>可以看到访问成功，并返回了json字符串。</p><hr><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>这里大家要注意到我定义了一个Exception拦截处理器RestException，用来处理错误的请求，同时要将错误的信息以json格式返回给客户端。<br><img src="https://78.media.tumblr.com/2edc9950488e9f043c5cfff0e56e2fb0/tumblr_ozjwhv556M1strv3do3_r2_500.png" alt=""><br>Spring统一规范处理错误异常，我们在RestException中引入<code>@ControllerAdvice</code>，专门用来拦截所有的异常，看下RestExceptiond的代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(NullPointerException.class)        </span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Error <span class="title">handlerJDBCException</span><span class="params">(NullPointerException e)</span> </span>&#123;</span><br><span class="line">        Error error = <span class="keyword">new</span> Error();</span><br><span class="line">        error.setMessage(e.getMessage());</span><br><span class="line">        error.setCode(<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">return</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注解了一个Exceptionhandler用来定义可以处理的Exception，由于在UserController中当用户为null的时候抛出了NullPointerException，这样这里就可以捕获到，另外注解了一个<code>@ResponseBody</code>这样返回一个实体给客户端。<br>我们再测试下请求一个不存在的用户，客户端就会收到一个Error json字符串。如下图所示：<br><img src="https://78.media.tumblr.com/b220fe9893b137740de42a9c8d5ffc1e/tumblr_ozjwhv556M1strv3do4_r1_1280.png" alt=""><br>这在处理客户端响应信息的时候是非常有用的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Spring-boot-Restful-API返回JSON&quot;&gt;&lt;a href=&quot;#Spring-boot-Restful-API返回JSON&quot; class=&quot;headerlink&quot; title=&quot;Spring boot Restful API返回JSON&quot;&gt;&lt;/a&gt;Spring boot Restful API返回JSON&lt;/h5&gt;&lt;p&gt;首先贴一个完整项目目录图，方便后面分析&lt;br&gt;&lt;img src=&quot;https://78.media.tumblr.com/50adb1b8bee25ab377262822df44b7ab/tumblr_ozjwhv556M1strv3do1_1280.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一、 先打开Mysql，然后创建一个数据库&lt;code&gt;zyuser&lt;/code&gt;，然后创建一个表&lt;code&gt;zyuser_user&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`zyuser_user`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`userid`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`email`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;邮箱(可用于登陆)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`realname`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`gender`&lt;/span&gt; tinyint(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`userid`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT=&lt;span class=&quot;number&quot;&gt;1000000401&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二、 定义2个model，一个是用户&lt;strong&gt;User&lt;/strong&gt;，一个是用来展示错误的&lt;strong&gt;Error&lt;/strong&gt;&lt;br&gt;User类&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String userid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String email;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String realname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; gender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getUserid&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; userid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUserid&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String userid)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.userid = userid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; email;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String email)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.email = email;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getRealname&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; realname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setRealname&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String realname)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.realname = realname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getGender&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setGender&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; gender)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.gender = gender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;User&amp;#123;&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;userid=&#39;&quot;&lt;/span&gt; + userid + &lt;span class=&quot;string&quot;&gt;&#39;\&#39;&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;, email=&#39;&quot;&lt;/span&gt; + email + &lt;span class=&quot;string&quot;&gt;&#39;\&#39;&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;, realname=&#39;&quot;&lt;/span&gt; + realname + &lt;span class=&quot;string&quot;&gt;&#39;\&#39;&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;, gender=&quot;&lt;/span&gt; + gender +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;&amp;#125;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://blog.hackyang.cn/categories/Spring-Boot/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring boot笔记（一）</title>
    <link href="http://blog.hackyang.cn/2017/11/16/Spring%20boot%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89I/"/>
    <id>http://blog.hackyang.cn/2017/11/16/Spring boot笔记（一）I/</id>
    <published>2017-11-16T14:12:32.000Z</published>
    <updated>2018-12-05T01:15:48.263Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Spring-boot-Intellij创建项目"><a href="#Spring-boot-Intellij创建项目" class="headerlink" title="Spring boot Intellij创建项目"></a>Spring boot Intellij创建项目</h5><p>近期在学习Spring boot，被他简单的开箱即用的设计深深的吸引了，不在依赖繁琐的xml配置（当然我们依然可以使用xml在spring boot中）。常规的如果使用SpringMVC我们首先要建立一个web.xml全局配置文件，另外还要简历一个application.xml来配置我们的应用配置。以上这些东西虽说都是很常规的操作，但是对于新手来说，首先最大的成本就是学习xml配置等一大堆东西，很多新手苦于在配置文件中找问题，使得springmvc学习成本陡然提升，尽管springmvc 4.0之后引入了注解，简化了部分配置的繁琐工作，但对于大多数人来说依然避免不了xml配置的问题。</p><p>为了解决以上问题，spring社区设计了一个全新的web框架，即<strong>Spring boot</strong>，文如其名<strong>boot</strong>快速启动，可以这样说，只要在pom文件中引入spring boot的核心框架，它会自动依赖spring core框架，配置的属性可以在SpringApplication中引入，即web应用的入口文件。<br>接下来我通过Intellij来创建一个spring boot项目，并创建一个Restful的Controller来处理请求，同时会结合Mybatis来操作数据库，返回json格式的数据给到客户端Client，这里还会详细介绍对于错误请求的处理，把错误信息以json回传给前端。由于这里介绍的是接口开发，不讨论基于web视图页面的相关内容。</p><ol><li>选择create new project，如下图，在界面中选择<br> <img src="https://78.media.tumblr.com/b4749e2c4ff8ec624bffae2390be9e85/tumblr_ozi4neTukX1strv3do2_1280.png" alt=""><a id="more"></a></li><li>然后填写groupid等信息<br> <img src="https://78.media.tumblr.com/efd20dea14e46afea2901f29eba2d636/tumblr_ozi4neTukX1strv3do1_1280.png" alt=""></li><li>这个页面大家可以根据实际需要选择要用到的库，我这里只选择了web、jdbc、mybatis、mysql-jdbc，如下图：<br> <img src="https://78.media.tumblr.com/6e0b7d3ec5054c5f4f50f1b353073640/tumblr_ozi4neTukX1strv3do3_1280.gif" alt=""></li><li>最后finish之后我们可以看到工程的目录如下图所示：<br> <img src="https://78.media.tumblr.com/6d7d7810badae2e3e4e61684547af910/tumblr_ozi4neTukX1strv3do4_1280.png" alt=""><br> 这里Intellij会自动帮我们生成应用的入口文件，如图中的<code>SpringbootdemoApplication</code>，启动springboot的时候，配置文件都是通过这里加载的。</li></ol><hr><h6 id="Application入口文件说明"><a href="#Application入口文件说明" class="headerlink" title="Application入口文件说明"></a>Application入口文件说明</h6><p>我们打开<code>SpringbootdemoApplication</code>文件，其中IDE已经帮我们加上了<code>@SpringBootApplication</code>注解，这里注意，由于Spring boot在进行资源扫描注入时默认是从当前入口文件所在的目录开始扫描的，因此为了保证可以扫描到所有的组件，如Controller、Service、Componant等组件，我们需要把入口文件放在源码目录的根目录下，当然这不是必须的，这样做是为了方便，我们也可以通过<code>@Configuration</code>来引入外部的配置文件，这里不做过多介绍。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootdemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringbootdemoApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其实如果刚刚我们只引入了Web依赖，而没引入SQL里面的依赖的话，是可以直接跑应用的，但是此时运行会报以下这些错误。<br><img src="https://78.media.tumblr.com/ca0711af15cd9b5df65775d12dd80bda/tumblr_ozi4neTukX1strv3do5_r1_1280.png" alt=""><br>意思是说我们没有配置database的相关文件，因为在引入数据库连接的相关依赖时，spring boot启动默认会加载<code>application.properties</code>文件里面的配置，好了我们在application.properties文件中加入database的相关配置，具体如下。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/zyuser</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=123456</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>Mybatis</span><br><span class="line"><span class="meta">#</span>mybatis.typeAliasesPackage=</span><br><span class="line"><span class="meta">#</span>mybatis.mapperLocations=classpath:mapper/*.xml</span><br></pre></td></tr></table></figure></p><p>这里关于Mybaties的属性我下一章节再介绍，然后在运行spring boot，如果出现下面的信息则代表启动成功<br><img src="https://78.media.tumblr.com/a526402b67bfbc9dea1f3acc11aed717/tumblr_ozi4neTukX1strv3do6_r1_1280.jpg" alt=""></p><hr><p><strong>好了，今天就讲到这里。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Spring-boot-Intellij创建项目&quot;&gt;&lt;a href=&quot;#Spring-boot-Intellij创建项目&quot; class=&quot;headerlink&quot; title=&quot;Spring boot Intellij创建项目&quot;&gt;&lt;/a&gt;Spring boot Intellij创建项目&lt;/h5&gt;&lt;p&gt;近期在学习Spring boot，被他简单的开箱即用的设计深深的吸引了，不在依赖繁琐的xml配置（当然我们依然可以使用xml在spring boot中）。常规的如果使用SpringMVC我们首先要建立一个web.xml全局配置文件，另外还要简历一个application.xml来配置我们的应用配置。以上这些东西虽说都是很常规的操作，但是对于新手来说，首先最大的成本就是学习xml配置等一大堆东西，很多新手苦于在配置文件中找问题，使得springmvc学习成本陡然提升，尽管springmvc 4.0之后引入了注解，简化了部分配置的繁琐工作，但对于大多数人来说依然避免不了xml配置的问题。&lt;/p&gt;
&lt;p&gt;为了解决以上问题，spring社区设计了一个全新的web框架，即&lt;strong&gt;Spring boot&lt;/strong&gt;，文如其名&lt;strong&gt;boot&lt;/strong&gt;快速启动，可以这样说，只要在pom文件中引入spring boot的核心框架，它会自动依赖spring core框架，配置的属性可以在SpringApplication中引入，即web应用的入口文件。&lt;br&gt;接下来我通过Intellij来创建一个spring boot项目，并创建一个Restful的Controller来处理请求，同时会结合Mybatis来操作数据库，返回json格式的数据给到客户端Client，这里还会详细介绍对于错误请求的处理，把错误信息以json回传给前端。由于这里介绍的是接口开发，不讨论基于web视图页面的相关内容。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择create new project，如下图，在界面中选择&lt;br&gt; &lt;img src=&quot;https://78.media.tumblr.com/b4749e2c4ff8ec624bffae2390be9e85/tumblr_ozi4neTukX1strv3do2_1280.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://blog.hackyang.cn/categories/Spring-Boot/"/>
    
    
  </entry>
  
  <entry>
    <title>Maven项目创建Hello world</title>
    <link href="http://blog.hackyang.cn/2017/11/01/Maven%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/"/>
    <id>http://blog.hackyang.cn/2017/11/01/Maven项目创建/</id>
    <published>2017-11-01T12:34:03.000Z</published>
    <updated>2018-12-05T01:15:48.262Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Maven项目创建Hello-world"><a href="#Maven项目创建Hello-world" class="headerlink" title="Maven项目创建Hello world"></a>Maven项目创建Hello world</h5><p>有一段时间没有弄Java Web项目了，最近工作需要，在看RPC跨进程通信的相关技术，想用Maven创建一个简单的项目进行测试。<br>囧^^-^^，竟然忘记了，好吧，重新整理下发个教程，巩固下基础知识：其中还有关于<strong>Log4j</strong>配置的问题。</p><ol><li>第一步，创建一个web app，选择maven–&gt;apache.webapp如下图，填写groupid、artflid<br><img src="https://78.media.tumblr.com/c35711722447c2d07c32d12fdc2fe2e4/tumblr_oyqaz8I2fP1strv3do4_1280.png" alt=""><br>创建工程成功。<a id="more"></a></li><li>第二步，选择顶部的Run按钮，在下拉框中选择edit，然后选择Edit configurations—&gt;Tomcat–&gt;LocalServer。如下图<br><img src="https://78.media.tumblr.com/d6c92adc60dec2818bb83658638dc0b2/tumblr_oyqaz8I2fP1strv3do6_1280.gif" alt=""></li><li>然后配置Tomcat，部署到本地，点击确认apply，最后回到主页点击run即可</li><li>还有一步不要忘了把src目录设置成source root<br><img src="https://78.media.tumblr.com/df8217191a826c404b2db2cecdda10ed/tumblr_oyqaz8I2fP1strv3do5_1280.png" alt=""><br><strong>遇到问题：</strong></li></ol><ul><li>jsp页面中文乱码<br>  解决办法：在jsp头部添加如下代码<br>  <code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</code></li><li><p>Log4J运行出错，提示：<br><img src="https://78.media.tumblr.com/3500e924121aa72d6b5f8dbb37824354/tumblr_oyqaz8I2fP1strv3do2_1280.png" alt=""></p><p>  其实这个问题很好解决，我们在src即source root目录下面添加一个配置文件<strong>log4j.properties</strong><br><img src="https://78.media.tumblr.com/18a1047f4af5b49a7d09f69c8f10a89d/tumblr_oyqaz8I2fP1strv3do3_500.png" alt=""></p><p>  内容如下：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">log4j.rootLogger=debug, stdout, R</span><br><span class="line"></span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line"></span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%<span class="number">5</span>p - %m%n</span><br><span class="line"></span><br><span class="line">log4j.appender.R=org.apache.log4j.RollingFileAppender</span><br><span class="line">log4j.appender.R.File=firestorm.log</span><br><span class="line"></span><br><span class="line">log4j.appender.R.MaxFileSize=<span class="number">100</span>KB</span><br><span class="line">log4j.appender.R.MaxBackupIndex=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n</span><br><span class="line"></span><br><span class="line">log4j.logger.com.codefutures=DEBUG</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Maven项目创建Hello-world&quot;&gt;&lt;a href=&quot;#Maven项目创建Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Maven项目创建Hello world&quot;&gt;&lt;/a&gt;Maven项目创建Hello world&lt;/h5&gt;&lt;p&gt;有一段时间没有弄Java Web项目了，最近工作需要，在看RPC跨进程通信的相关技术，想用Maven创建一个简单的项目进行测试。&lt;br&gt;囧^^-^^，竟然忘记了，好吧，重新整理下发个教程，巩固下基础知识：其中还有关于&lt;strong&gt;Log4j&lt;/strong&gt;配置的问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步，创建一个web app，选择maven–&amp;gt;apache.webapp如下图，填写groupid、artflid&lt;br&gt;&lt;img src=&quot;https://78.media.tumblr.com/c35711722447c2d07c32d12fdc2fe2e4/tumblr_oyqaz8I2fP1strv3do4_1280.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;创建工程成功。
    
    </summary>
    
      <category term="maven" scheme="http://blog.hackyang.cn/categories/maven/"/>
    
    
  </entry>
  
  <entry>
    <title>Zookeeper笔记</title>
    <link href="http://blog.hackyang.cn/2017/11/01/Zookeeper%E5%AD%A6%E4%B9%A0/"/>
    <id>http://blog.hackyang.cn/2017/11/01/Zookeeper学习/</id>
    <published>2017-11-01T04:43:53.000Z</published>
    <updated>2018-12-05T01:15:48.265Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Zookeeper学习笔记"><a href="#Zookeeper学习笔记" class="headerlink" title="Zookeeper学习笔记"></a>Zookeeper学习笔记</h4><h5 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h5><p>ZooKeeper是一种分布式协调服务，用于管理大型主机。在分布式环境中协调和管理服务是一个复杂的过程。ZooKeeper通过其简单的架构和API解决了这个问题。ZooKeeper允许开发人员专注于核心应用程序逻辑，而不必担心应用程序的分布式特性。<br><strong>典型应用场景：</strong></p><ol><li><h6 id="数据发布与订阅（配置信息同步）"><a href="#数据发布与订阅（配置信息同步）" class="headerlink" title="数据发布与订阅（配置信息同步）"></a>数据发布与订阅（配置信息同步）</h6><p> 我们有一个服务器集群，其中每个服务器都有对应的配置文件，实际操作中该如何同步修改共有的配置属性？当然你可以同步docker解决，但我们要知道有些共有的属性我们不可能都放在docker中，为了保持每台服务器的配置信息同步。我们使用zookeeper就可以解决这个问题。每台服务器连接到zookeeper，与之对应的节点监听着node的数据变化。我们只需要更新leader的config文件，zookeeper就能同步到其他各个节点，这样每台服务器就能同步config信息</p></li><li><h6 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h6><p> 在分布式环境中，为了保证高可用性，通常同一个应用或同一个服务的提供方都会部署多份，达到对等服务。而消费者就须要在这些对等的服务器中选择一个来执行相关的业务逻辑，其中比较典型的是消息中间件中的生产者，消费者负载均衡。</p></li><li><h6 id="命名服务"><a href="#命名服务" class="headerlink" title="命名服务"></a>命名服务</h6> 命名服务也是分布式系统中比较常见的一类场景。在分布式系统中，通过使用命名服务，客户端应用能够根据指定名字来获取资源或服务的地址，提供者等信息。被命名的实体通常可以是集群中的机器，提供的服务地址，远程对象等等——这些我们都可以统称他们为名字（Name）。其中较为常见的就是一些分布式服务框架中的服务地址列表。通过调用ZK提供的创建节点的API，能够很容易创建一个全局唯一的path，这个path就可以作为一个名称。</li><li><h6 id="集群管理与Master选举"><a href="#集群管理与Master选举" class="headerlink" title="集群管理与Master选举"></a>集群管理与Master选举</h6></li><li><h6 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h6></li><li><h6 id="分布式队列"><a href="#分布式队列" class="headerlink" title="分布式队列"></a>分布式队列</h6></li></ol><h5 id="二、Znode节点"><a href="#二、Znode节点" class="headerlink" title="二、Znode节点"></a>二、Znode节点</h5><p>一般来说zookeeper的核心在与节点的数据同步，每个znode最多可存储1MB的数据。这与UNIX文件系统相类似，除了父znode也可以存储数据。这种结构的主要目的是存储同步数据并描述znode的元数据。此结构称为 ZooKeeper数据模型。<br><img src="https://img.w3cschool.cn/attachments/day_161229/201612291345162031.jpg" alt=""><br>ZooKeeper数据模型中的每个znode都维护着一个 stat 结构。一个stat仅提供一个znode的元数据。它由版本号，操作控制列表(ACL)，时间戳和数据长度组成。</p><ul><li>版本号 - 每个znode都有版本号，这意味着每当与znode相关联的数据发生变化时，其对应的版本号也会增加。当多个zookeeper客户端尝试在同一znode上执行操作时，版本号的使用就很重要。</li><li>操作控制列表(ACL) - ACL基本上是访问znode的认证机制。它管理所有znode读取和写入操作。</li><li>时间戳 - 时间戳表示创建和修改znode所经过的时间。它通常以毫秒为单位。ZooKeeper从“事务ID”(zxid)标识znode的每个更改。Zxid 是唯一的，并且为每个事务保留时间，以便你可以轻松地确定从一个请求到另一个请求所经过的时间。</li><li>数据长度 - 存储在znode中的数据总量是数据长度。你最多可以存储1MB的数据。</li></ul><h6 id="Znode的类型"><a href="#Znode的类型" class="headerlink" title="Znode的类型"></a>Znode的类型</h6><p>Znode被分为持久（persistent）节点，顺序（sequential）节点和临时（ephemeral）节点。</p><ul><li><strong>持久节点</strong>  - 即使在创建该特定znode的客户端断开连接后，持久节点仍然存在。默认情况下，除非另有说明，否则所有znode都是持久的。</li><li><strong>临时节点</strong> - 客户端活跃时，临时节点就是有效的。当客户端与ZooKeeper集合断开连接时，临时节点会自动删除。因此，只有临时节点不允许有子节点。如果临时节点被删除，则下一个合适的节点将填充其位置。临时节点在leader选举中起着重要作用。</li><li><strong>顺序节点</strong> - 顺序节点可以是持久的或临时的。当一个新的znode被创建为一个顺序节点时，ZooKeeper通过将10位的序列号附加到原始名称来设置znode的路径。例如，如果将具有路径 /myapp 的znode创建为顺序节点，则ZooKeeper会将路径更改为 /myapp0000000001 ，并将下一个序列号设置为0000000002。如果两个顺序节点是同时创建的，那么ZooKeeper不会对每个znode使用相同的数字。顺序节点在锁定和同步中起重要作用。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Zookeeper学习笔记&quot;&gt;&lt;a href=&quot;#Zookeeper学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Zookeeper学习笔记&quot;&gt;&lt;/a&gt;Zookeeper学习笔记&lt;/h4&gt;&lt;h5 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot;
      
    
    </summary>
    
      <category term="Zookeeper" scheme="http://blog.hackyang.cn/categories/Zookeeper/"/>
    
    
  </entry>
  
  <entry>
    <title>系统架构的模块化与组件化</title>
    <link href="http://blog.hackyang.cn/2017/10/11/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    <id>http://blog.hackyang.cn/2017/10/11/系统优化/</id>
    <published>2017-10-11T12:34:03.000Z</published>
    <updated>2018-12-05T01:15:48.267Z</updated>
    
    <content type="html"><![CDATA[<h4 id="系统架构的模块化与组件化"><a href="#系统架构的模块化与组件化" class="headerlink" title="系统架构的模块化与组件化"></a>系统架构的模块化与组件化</h4><h5 id="一、软件研发中的问题"><a href="#一、软件研发中的问题" class="headerlink" title="一、软件研发中的问题"></a>一、软件研发中的问题</h5><p>我们都知道在做软件开发的时候，随着业务的不断扩充，功能的增加，系统会越来越复杂，代码的耦合度也会越来越高。<br>具体表现为：</p><blockquote><ul><li>代码量膨胀，不利于维护，更不利于新功能的开发</li><li>业务开发分工不明确，开发人员要关心非业务的代码</li><li>不同业务代码耦合严重，难以多人合作，职责不分明</li><li>改代码时，可能会影响其他业务，牵一发动全身</li></ul></blockquote><p>多人一起开发时，如果代码结构、模块化的不好，就很难对不同业务划分出分界线，难以明确各自的职责，牵一发动全身，出了问题更是容易相互扯皮（这个时候只能说一句“怪我咯o(╯□╰)o”），更不用提合并代码时的冲突了。</p><p>因此为了尽可能的减少规避这些问题，人们发明了不同开发框架，如MVP、MVC（TP框架）、MVVM等，这些都是为了降低研发成本。这些只是规范了代码，理论上大家严格遵守框架规范是可以做出单个可维护性较高的系统，但一个系统一定会越来越庞大，功能模块也会越来越多，单纯的依靠软件架构规范已经没办法避免以上这些问题了。<br>后来就诞生了模块化、组件化、微服务等一些拆分方案， 目的都是为了解耦代码，提高代码的复用率和容错率，以及提升研发效率。<br>具体优势如下：</p><blockquote><ul><li>架构更清晰，解耦</li><li>加快编译速度</li><li>业务分工明确，开发人员仅专注与自己的业务</li><li>提高开发效率</li><li>组件、业务独立更新版本，可回滚，持续集成<a id="more"></a></li></ul></blockquote><h5 id="二、两者关系"><a href="#二、两者关系" class="headerlink" title="二、两者关系"></a>二、两者关系</h5><p>从上面的阐述可以得出，一个工程，由多个模块组成，每个模块由多个组件构成。但很多时候，两者界限还是相当模糊。例如“日志组件”称为“日志模块”，也没有违和感。</p><blockquote><ul><li>组件从业务角度上不能继续拆分，可替换，可复用<br>= 模块的定义比较笼统，可以是一个Business业务，可以是技术架构中一个业务，也可以是几个组件构成的小功能</li></ul></blockquote><p>无论是组件化还是模块化，目标都是把臃肿的工程，拆分为更小的部分，解耦各种复杂的逻辑，便于代码管理。</p><h5 id="三、模块化与组件化"><a href="#三、模块化与组件化" class="headerlink" title="三、模块化与组件化"></a>三、模块化与组件化</h5><ol><li><h6 id="什么是模块化？"><a href="#什么是模块化？" class="headerlink" title="什么是模块化？"></a>什么是模块化？</h6>模块翻译为“Module”，字面意思。模块由多个组件构成，它可以实现一个独立的功能，甚至业务。模块化的目的在于将一个程序按照其功能做拆分，分成相互独立的模块，以便于每个模块只包含与其功能相关的内容，模块之间通过接口（API或者RPC）调用。<br><img src="http://upload-images.jianshu.io/upload_images/1359048-23c1ebc9ed97978f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="模块"><br>举例：“展翅网”的大模块有，<strong>首页-实习-兼职、技能培训、测评、吾聊职场</strong>都可以称为一个大模块；当然这样的拆分还不够精细，大家普遍称之为项目会更合适，为了更细分使模块复用率更高，我们必须继续拆分，使服务层和上层业务独立分开，这样我们才能更好的做系统模块化。</li></ol><p><img src="https://78.media.tumblr.com/e7b2ea18d79784cd1ec54c25d21a6d74/tumblr_oxnjzgrXvM1strv3do1_r1_1280.png" alt=""><br>模块细化还要有一些基础模块，如下图<br><img src="http://upload-images.jianshu.io/upload_images/270478-79c6af13a24c67bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ol start="2"><li><h6 id="什么是组件化？"><a href="#什么是组件化？" class="headerlink" title="什么是组件化？"></a>什么是组件化？</h6><p>组件，应该翻译为“Component”，意思是组件、部件、元件。在电子电路中，电子元件是电子电路中的基本元素。在App工程上，组件是构成业务或者功能模块的基本单位。原则上，组件与组件之间互不依赖。<br><img src="http://upload-images.jianshu.io/upload_images/1359048-525b1823be29b051.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="组件"><br>例如，图片上传功能，应该叫“图片上传组件”，而不是“图片上传模块”。因为图片上传从功能、业务上，已经不能往下拆了。图片上传可能使用七牛sdk，或者又拍云sdk。无论图片上传组件用七牛sdk，还是又拍云sdk，都不会影响这个组件的功能，因此组件具有可替换性；同时，图片上传组件可以被多个业务使用，因此组件具有可复用性。由于sdk只是技术细节，它跟业务并没有关系。在业务架构图上，也不会出现“xx sdk”，因此我们说图片上传组件不能拆分了。<br><strong>美团点评的前端组件框架</strong><br><img src="http://upload-images.jianshu.io/upload_images/1359048-2784ee812efe4aef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>从上图可以看出，多个组件构成一个模块，当模块相当于业务时，就是说该业务由多个组件组合而成。</p></li><li><h6 id="组件化的优势"><a href="#组件化的优势" class="headerlink" title="组件化的优势"></a>组件化的优势</h6><p><strong>1.可扩展性</strong></p><blockquote><p>这里主要是讲前端为主，其实后端服务也是一样，比如爬虫模块的下载组件，这里不做具体的阐述</p></blockquote></li></ol><p>通过组件之间的合理组合搭配，可以构建出满足业务需求的新组件。<br>这一点很好理解，举个例子，我们有一个基础的树形组件<code>tree</code>和<code>tree-node</code>，现在来了一个业务需求，需要开发一个人员/机构的选择器，那么我们就可以很方便的基于我们的<code>tree</code>组件进行扩展，创建一个新的组件<code>xx-selector</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;list :data=<span class="string">"selectedData"</span> /&gt; <span class="comment">// 已选列表</span></span><br><span class="line">  &lt;/selected&gt;</span><br><span class="line">  &lt;tree :data=<span class="string">"treeData"</span>  onSelect=<span class="string">"onSelect"</span>&gt;</span><br><span class="line">    &lt;template slot=<span class="string">"treeNode"</span>&gt;</span><br><span class="line">      ...custom ui here</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/tree&gt; </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">import</span> tree from ./tree.vue</span><br><span class="line">  <span class="keyword">import</span> list from ./list.vue</span><br><span class="line">  <span class="keyword">module</span>.<span class="keyword">exports</span> = &#123;</span><br><span class="line">    data:&#123;</span><br><span class="line">      treeData:[],  </span><br><span class="line">      selectedData:[]</span><br><span class="line">    &#125;,</span><br><span class="line">    created:function()&#123;</span><br><span class="line">      <span class="keyword">this</span>.init()</span><br><span class="line">    &#125;</span><br><span class="line">    methods:&#123;</span><br><span class="line">      onSelect:function(selected)&#123;</span><br><span class="line">        <span class="keyword">this</span>.selectedData = selected</span><br><span class="line">        <span class="keyword">this</span>.$emit(<span class="string">'onSelectedChange'</span>,selected)</span><br><span class="line">      &#125;,</span><br><span class="line">      initData:function()&#123;</span><br><span class="line">        <span class="comment">// ajax请求获取人员信息</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><strong>2.可复用</strong><br>刚才的<code>xx-selector</code>组件就复用到了基础的<code>tree</code>组件和<code>tree-node</code>组件。同样的道理，我们开发的<code>xx-selector</code>人员选择器组件，可以在任何有同样需求的地方重复使用，可以成为一个专属你们开发团队的一个基础组件，减少了开发量。</p><p><strong>3.高内聚/低耦合</strong><br>在我们使用<code>xx-selector</code>组件时，我们无需关心该组件内部的实现细节，我们只需要监听它暴露出来的<code>onSelectedChanged(selectedList)</code>事件，这个事件在选中人员发生改变时触发，把已选人员列表<code>selectedList</code>传递我们——我们使用选择器，所该关心就只是已选列表而已。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;xx-selector onSelectedChanged=<span class="string">"selectorChanged"</span>&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">import</span> xx-selector from ./xx-selector.vue</span><br><span class="line">  <span class="keyword">module</span>.<span class="keyword">exports</span> = &#123;</span><br><span class="line">    data:&#123; &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      selectorChanged:function(selected)&#123;</span><br><span class="line">        <span class="comment">// 处理已选</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>这样就实现了</p><ul><li>组件内部高度内聚——只给外部提供功能，对外部的修改关闭</li><li>组件之间低耦合——组件与组件只需要监听事件、触发事件，子组件不依赖与父组件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;系统架构的模块化与组件化&quot;&gt;&lt;a href=&quot;#系统架构的模块化与组件化&quot; class=&quot;headerlink&quot; title=&quot;系统架构的模块化与组件化&quot;&gt;&lt;/a&gt;系统架构的模块化与组件化&lt;/h4&gt;&lt;h5 id=&quot;一、软件研发中的问题&quot;&gt;&lt;a href=&quot;#一、软件研发中的问题&quot; class=&quot;headerlink&quot; title=&quot;一、软件研发中的问题&quot;&gt;&lt;/a&gt;一、软件研发中的问题&lt;/h5&gt;&lt;p&gt;我们都知道在做软件开发的时候，随着业务的不断扩充，功能的增加，系统会越来越复杂，代码的耦合度也会越来越高。&lt;br&gt;具体表现为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;代码量膨胀，不利于维护，更不利于新功能的开发&lt;/li&gt;
&lt;li&gt;业务开发分工不明确，开发人员要关心非业务的代码&lt;/li&gt;
&lt;li&gt;不同业务代码耦合严重，难以多人合作，职责不分明&lt;/li&gt;
&lt;li&gt;改代码时，可能会影响其他业务，牵一发动全身&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;多人一起开发时，如果代码结构、模块化的不好，就很难对不同业务划分出分界线，难以明确各自的职责，牵一发动全身，出了问题更是容易相互扯皮（这个时候只能说一句“怪我咯o(╯□╰)o”），更不用提合并代码时的冲突了。&lt;/p&gt;
&lt;p&gt;因此为了尽可能的减少规避这些问题，人们发明了不同开发框架，如MVP、MVC（TP框架）、MVVM等，这些都是为了降低研发成本。这些只是规范了代码，理论上大家严格遵守框架规范是可以做出单个可维护性较高的系统，但一个系统一定会越来越庞大，功能模块也会越来越多，单纯的依靠软件架构规范已经没办法避免以上这些问题了。&lt;br&gt;后来就诞生了模块化、组件化、微服务等一些拆分方案， 目的都是为了解耦代码，提高代码的复用率和容错率，以及提升研发效率。&lt;br&gt;具体优势如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;架构更清晰，解耦&lt;/li&gt;
&lt;li&gt;加快编译速度&lt;/li&gt;
&lt;li&gt;业务分工明确，开发人员仅专注与自己的业务&lt;/li&gt;
&lt;li&gt;提高开发效率&lt;/li&gt;
&lt;li&gt;组件、业务独立更新版本，可回滚，持续集成
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sublime Text 3最新注册码</title>
    <link href="http://blog.hackyang.cn/2017/09/27/Sublime%20Text%203%E6%9C%80%E6%96%B0%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://blog.hackyang.cn/2017/09/27/Sublime Text 3最新注册码/</id>
    <published>2017-09-27T14:23:25.000Z</published>
    <updated>2018-12-05T01:15:48.264Z</updated>
    
    <content type="html"><![CDATA[<h4 id="适用于3143版"><a href="#适用于3143版" class="headerlink" title="适用于3143版"></a>适用于3143版</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">—– BEGIN LICENSE —–</span><br><span class="line">TwitterInc</span><br><span class="line"><span class="number">200</span> User License</span><br><span class="line">EA7E-<span class="number">890007</span></span><br><span class="line"><span class="number">1</span>D77F72E <span class="number">390</span>CDD93 <span class="number">4</span>DCBA022 FAF60790</span><br><span class="line"><span class="number">61</span>AA12C0 A37081C5 D0316412 <span class="number">4584</span>D136</span><br><span class="line"><span class="number">94</span>D7F7D4 <span class="number">95</span>BC8C1C <span class="number">527</span>DA828 <span class="number">560</span>BB037</span><br><span class="line">D1EDDD8C AE7B379F <span class="number">50</span>C9D69D B35179EF</span><br><span class="line"><span class="number">2F</span>E898C4 <span class="number">8E4277</span>A8 <span class="number">555</span>CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F <span class="number">7652</span>EED2</span><br><span class="line"><span class="number">9</span>D2D2E61 <span class="number">67610860</span> <span class="number">6</span>D338B72 <span class="number">5</span>CF95C69</span><br><span class="line">E36B85CC <span class="number">84991F</span>19 <span class="number">7575</span>D828 <span class="number">470</span>A92AB</span><br><span class="line">—— END LICENSE ——</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;适用于3143版&quot;&gt;&lt;a href=&quot;#适用于3143版&quot; class=&quot;headerlink&quot; title=&quot;适用于3143版&quot;&gt;&lt;/a&gt;适用于3143版&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="编辑器" scheme="http://blog.hackyang.cn/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构算法学习笔记（一）</title>
    <link href="http://blog.hackyang.cn/2017/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://blog.hackyang.cn/2017/09/12/数据结构学习笔记（一）/</id>
    <published>2017-09-12T12:34:03.000Z</published>
    <updated>2018-12-05T01:15:48.267Z</updated>
    
    <content type="html"><![CDATA[<h4 id="数据结构算法学习笔记（一）"><a href="#数据结构算法学习笔记（一）" class="headerlink" title="数据结构算法学习笔记（一）"></a>数据结构算法学习笔记（一）</h4><h5 id="一、树"><a href="#一、树" class="headerlink" title="一、树"></a>一、树</h5><p>树的储存结构分3种</p><ol><li><p>双亲表示法<br>根结点外，其余每个结点，它不一定有孩子，但是一定有且仅有一个双亲。我们假设以一组连续空间存储树的结点，同时在每个结点中，附设一个指示器指示其双亲结点在数组中的位置。也就是说，每个结点除了知道自己是谁以外，还知道它的双亲在哪里<br>以下是我们的双亲表示法的结点结构定义代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 树的双亲表示法结点结构定义 */</span></span><br><span class="line">define MAX_TREE_SIZE <span class="number">100</span></span><br><span class="line"><span class="comment">/* 树结点的数据类型，目前暂定为整型 */</span></span><br><span class="line">typedef <span class="keyword">int</span> TElemType;              </span><br><span class="line"><span class="comment">/* 结点结构 */</span></span><br><span class="line">typedef struct PTNode               </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 结点数据 */</span></span><br><span class="line">    TElemType data;                 </span><br><span class="line">    <span class="comment">/* 双亲位置 */</span></span><br><span class="line">    <span class="keyword">int</span> parent;                     </span><br><span class="line">&#125; PTNode;</span><br><span class="line"><span class="comment">/* 树结构 */</span></span><br><span class="line">typedef struct                      </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 结点数组 */</span></span><br><span class="line">    PTNode nodes[MAX_TREE_SIZE];    </span><br><span class="line">    <span class="comment">/* 根的位置和结点数 */</span></span><br><span class="line">    <span class="keyword">int</span> r, n;                       </span><br><span class="line">&#125; PTree;</span><br></pre></td></tr></table></figure><p> 在此基础上我们可以改进下树的结构，增加一个结点最左边孩子的域，不妨叫它长子域，这样就可以很容易得到结点的孩子。如果没有孩子的结点，这个长子域就设置为-1，如下表格</p><a id="more"></a><p><img src="https://68.media.tumblr.com/1cb70425142c9b8998c0ad5f96515413/tumblr_ow5tibQel91strv3do2_r1_400.png" alt=""></p></li><li><p>孩子表示法<br>换一种完全不同的考虑方法。由于树中每个结点可能有多棵子树，可以考虑用多重链表，即每个结点有多个指针域，其中每个指针指向一棵子树的根结点，我们把这种方法叫做多重链表表示法。不过，树的每个结点的度，也就是它的孩子个数是不同的。所以可以设计两种方案来解决</p><blockquote><p>我们为了要遍历整棵树，把每个结点放到一个顺序存储结构的数组中是合理的，但每个结点的孩子有多少是不确定的，所以我们再对每个结点的孩子建立一个单链表体现它们的关系</p><p>这就是我们要讲的孩子表示法。具体办法是，把每个结点的孩子结点排列起来，以单链表作存储结构，则n个结点有n个孩子链表，如果是叶子结点则此单链表为空。然后n个头指针又组成一个线性表，采用顺序存储结构，存放进一个一维数组中</p></blockquote></li><li><p>孩子兄弟表示法<br>刚才我们分别从双亲的角度和从孩子的角度研究树的存储结构，如果我们从树结点的兄弟的角度考虑又会如何呢？当然，对于树这样的层级结构来说，只研究结点的兄弟是不行的，我们观察后发现，任意一棵树，它的结点的第一个孩子如果存在就是唯一的，它的右兄弟如果存在也是唯一的。因此，我们设置两个指针，分别指向该结点的第一个孩子和此结点的右兄弟。</p></li></ol><hr><h5 id="二、二叉树"><a href="#二、二叉树" class="headerlink" title="二、二叉树"></a>二、二叉树</h5><p>二叉树特点</p><ul><li>每个结点最多有两棵子树，所以二叉树中不存在度大于2的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。</li><li>左子树和右子树是有顺序的，次序不能任意颠倒。就像人有双手、双脚，但显然左手、左脚和右手、右脚是不一样的，右手戴左手套、右脚穿左鞋都会极其别扭和难受。</li><li>即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。图6-5-3中，树1和树2是同一棵树，但它们却是不同的二叉树。就好像你一不小心，摔伤了手，伤的是左手还是右手，对你的生活影响度是完全不同的。</li></ul><hr><p>二叉树分类：</p><ol><li><strong>斜树：</strong>斜树一定要是斜的，但是往哪斜还是有讲究。所有的结点都只有左子树的二叉树叫左斜树。所有结点都是只有右子树的二叉树叫右斜树。这两者统称为斜树。斜树有很明显的特点，就是每一层都只有一个结点，结点的个数与二叉树的深度相同。</li><li><p><strong>满二叉树：</strong>在一棵二叉树中，如果所有分支结点都存在左子树和右子树，并且所有叶子都在同一层上，这样的二叉树称为满二叉树。</p><blockquote><p>单是每个结点都存在左右子树，不能算是满二叉树，还必须要所有的叶子都在同一层上，这就做到了整棵树的平衡。</p></blockquote><p> <em>满二叉树具有以下特点：</em></p><ul><li>叶子只能出现在最下一层。出现在其他层就不可能达成平衡</li><li>非叶子结点的度一定是2。否则就是“缺胳膊少腿”了</li><li><p>在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多</p><p><img src="http://erqi.github.io/images/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91.png" alt=""></p></li></ul></li><li><p><strong>完全二叉树：</strong>对一棵具有n个结点的二叉树按层序编号，如果编号为i（1≤i≤n）的结点与同样深度的满二叉树中编号为i的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。<br> <em>完全二叉树的特点：</em></p><ul><li>叶子结点只能出现在最下两层</li><li>最下层的叶子一定集中在左部连续位置</li><li>倒数二层，若有叶子结点，一定都在右部连续位置</li><li>如果结点度为1，则该结点只有左孩子，即不存在只有右子树的情况</li><li>同样结点数的二叉树，完全二叉树的深度最小<br><img src="http://www.manonggu.com/kecheng/UploadFile/UeImg/Knowledge/20151124/6358396256159698411806630.jpg" alt=""><br>上图只有图1、3是完全二叉树</li></ul></li></ol><hr><p>二叉树性质</p><ol><li>在二叉树的第i层上至多有2i-1个结点（i≥1）</li><li>深度为k的二叉树至多有2k-1个结点（k≥1）</li><li>对任何一棵二叉树T，如果其终端结点数为n0，度为2的结点数为n2，则n0=n2+1</li><li>具有n个结点的完全二叉树的深度为|log2n+1|（|x|表示不大于x的最大整数，由性质2反推</li><li><p>如果对一棵有n个结点的完全二叉树（其深度为）的结点按层序编号（从第1层到第层，每层从左到右），对任一结点i（1≤i≤n）有：</p><blockquote><p>1.如果i=1，则结点i是二叉树的根，无双亲；如果i&gt;1，则其双亲是结点<br>2.如果2i&gt;n，则结点i无左孩子（结点i为叶子结点）；否则其左孩子是结点2i<br>3.如果2i+1&gt;n，则结点i无右孩子；否则其右孩子是结点2i+1）</p></blockquote><p> 我们以下图为例，来理解这个性质。这是一个完全二叉树，深度为4，结点总数是10。<br> <img src="http://7xospc.com1.z0.glb.clouddn.com/6-5-6.jpg" alt=""><br> 对于第一条来说是很显然的，i=1时就是根结点。i&gt;1时，比如结点7，它的双亲就是，结点9，它的双亲就是。</p><p> 第二条，比如结点6，因为2×6=12超过了结点总数10，所以结点6无左孩子，它是叶子结点。同样，而结点5，因为2×5=10正好是结点总数10，所以它的左孩子是结点10。</p><p> 第三条，比如结点5，因为2×5+1=11，大于结点总数10，所以它无右孩子。而结点3，因为2×3+1=7小于10，所以它的右孩子是结点7。</p></li></ol><hr><p>二叉树存储结构</p><ol><li>二叉树顺序存储结构</li><li>二叉链表</li></ol><hr><p>二叉树遍历</p><ol><li>前序遍历<blockquote><p>规则是若二叉树为空，则空操作返回，否则先访问根结点，然后前序遍历左子树，再前序遍历右子树</p></blockquote></li><li>中序遍历<blockquote><p>规则是若树为空，则空操作返回，否则从根结点开始（注意并不是先访问根结点），中序遍历根结点的左子树，然后是访问根结点，最后中序遍历右子树</p></blockquote></li><li>后序遍历<blockquote><p>规则是若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点</p></blockquote></li><li>层序遍历<blockquote><p>规则是若树为空，则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问</p></blockquote></li></ol><p>遍历算法</p><ol><li><p>前序遍历<br>二叉树的定义是用递归的方式，所以，实现遍历算法也可以采用递归，而且极其简洁明了。先来看看二叉树的前序遍历算法。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 二叉树的前序遍历递归算法 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTraverse</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == NULL)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">/* 显示结点数据，可以更改为其他对结点操作 */</span></span><br><span class="line">    printf(<span class="string">"%c"</span>, T-&gt;data);          </span><br><span class="line">    <span class="comment">/* 再先序遍历左子树 */</span></span><br><span class="line">    PreOrderTraverse(T-&gt;lchild);    </span><br><span class="line">    <span class="comment">/* 最后先序遍历右子树 */</span></span><br><span class="line">    PreOrderTraverse(T-&gt;rchild);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>中序遍历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 二叉树的中序遍历递归算法 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == NULL)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">/* 中序遍历左子树 */</span></span><br><span class="line">    InOrderTraverse(T-&gt;lchild);    </span><br><span class="line">    <span class="comment">/* 显示结点数据，可以更改为其他对结点操作 */</span></span><br><span class="line">    printf(<span class="string">"%c"</span>, T-&gt;data);         </span><br><span class="line">    <span class="comment">/* 最后中序遍历右子树 */</span></span><br><span class="line">    InOrderTraverse(T-&gt;rchild);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>换句话说，它等于是把调用左孩子的递归函数提前了。</p><ol start="3"><li>后序遍历<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 二叉树的后序遍历递归算法 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == NULL)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">/* 先后序遍历左子树 */</span></span><br><span class="line">    PostOrderTraverse(T-&gt;lchild);    </span><br><span class="line">    <span class="comment">/* 再后序遍历右子树 */</span></span><br><span class="line">    PostOrderTraverse(T-&gt;rchild);    </span><br><span class="line">    <span class="comment">/* 显示结点数据，可以更改为其他对结点操作 */</span></span><br><span class="line">    printf(<span class="string">"%c"</span>, T-&gt;data);           </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>二叉树推倒遍历特性：</p><ul><li>已知前序遍历序列和中序遍历序列，可以唯一确定一棵二叉树</li><li>已知后序遍历序列和中序遍历序列，可以唯一确定一棵二叉树</li></ul><p>知道前序和后序遍历是无法唯一确定二叉树，为什么呢？<br>原因也很简单，比如前序序列是ABC，后序序列是CBA。我们可以确定A一定是根结点，但接下来，我们无法知道，哪个结点是左子树，哪个是右子树。这棵树可能有如图所示的四种可能。<br><img src="https://68.media.tumblr.com/7722823defbe91333ad13a056ad9b43c/tumblr_ow5tibQel91strv3do1_1280.png" alt="多种可能"></p><hr><p>红黑树<br>定义</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;数据结构算法学习笔记（一）&quot;&gt;&lt;a href=&quot;#数据结构算法学习笔记（一）&quot; class=&quot;headerlink&quot; title=&quot;数据结构算法学习笔记（一）&quot;&gt;&lt;/a&gt;数据结构算法学习笔记（一）&lt;/h4&gt;&lt;h5 id=&quot;一、树&quot;&gt;&lt;a href=&quot;#一、树&quot; class=&quot;headerlink&quot; title=&quot;一、树&quot;&gt;&lt;/a&gt;一、树&lt;/h5&gt;&lt;p&gt;树的储存结构分3种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;双亲表示法&lt;br&gt;根结点外，其余每个结点，它不一定有孩子，但是一定有且仅有一个双亲。我们假设以一组连续空间存储树的结点，同时在每个结点中，附设一个指示器指示其双亲结点在数组中的位置。也就是说，每个结点除了知道自己是谁以外，还知道它的双亲在哪里&lt;br&gt;以下是我们的双亲表示法的结点结构定义代码。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 树的双亲表示法结点结构定义 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;define MAX_TREE_SIZE &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 树结点的数据类型，目前暂定为整型 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; TElemType;              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 结点结构 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef struct PTNode               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 结点数据 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TElemType data;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 双亲位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; parent;                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; PTNode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 树结构 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef struct                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 结点数组 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PTNode nodes[MAX_TREE_SIZE];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 根的位置和结点数 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r, n;                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; PTree;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 在此基础上我们可以改进下树的结构，增加一个结点最左边孩子的域，不妨叫它长子域，这样就可以很容易得到结点的孩子。如果没有孩子的结点，这个长子域就设置为-1，如下表格&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://blog.hackyang.cn/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux常用功能笔记</title>
    <link href="http://blog.hackyang.cn/2017/09/05/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/"/>
    <id>http://blog.hackyang.cn/2017/09/05/linux服务器常用功能/</id>
    <published>2017-09-05T08:50:03.000Z</published>
    <updated>2018-12-05T01:15:48.266Z</updated>
    
    <content type="html"><![CDATA[<h4 id="linux常用功能"><a href="#linux常用功能" class="headerlink" title="linux常用功能"></a>linux常用功能</h4><ol><li>安装卸载软件，比如mysql<ul><li>首先更新下仓库：<code>yum install -y update</code></li><li>安装软件：<code>yum install mysql-server mysql-client</code></li><li>卸载软件：<ol><li><code>yum remove mysql-server</code></li><li><code>yum remove mysql-client</code></li><li><code>yum autoremove</code>彻底删除，清理残留</li></ol></li></ul></li><li><p>Linux 常用命令<br>md5校验：<code>md5Sum xxx.txt</code><br>全选删除<code>:%d</code>、<code>按ggdG</code><br>定位：</p><ul><li>快速到最后一行：<code>shift + G</code></li><li>快速到第一行： <code>1 + shift +G</code></li><li>快速到第n行： <code>n + shift + G</code></li></ul></li><li><p>安装LNMP集成包</p><ul><li><p>执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://soft.vpser.net/lnmp/lnmp1.4.tar.gz &amp;&amp; tar zxf lnmp1.4.tar.gz &amp;&amp; cd lnmp1.4 &amp;&amp; ./install.sh lnmp</span><br></pre></td></tr></table></figure></li><li><p>安装完成后出现如下页面：<br><img src="https://lnmp.org/images/1.4/lnmp1.4-install-1.png" alt=""><br>目前提供了较多的MySQL、MariaDB版本和不安装数据库的选项，需要注意的是<strong>MySQL 5.6,5.7及MariaDB 10</strong>必须在1G以上内存的更高配置上才能选择！</p></li><li>安装完成后，如果显示Nginx: OK，MySQL: OK，PHP: OK<br><img src="https://lnmp.org/images/1.4/lnmp1.4-install-success.png" alt=""><br>并且Nginx、MySQL、PHP都是running，80和3306端口都存在，并提示安装使用的时间及Install lnmp V1.4 completed! enjoy it.的话，说明已经安装成功。</li></ul></li></ol><a id="more"></a><ol start="4"><li><p>LNMP添加虚拟主机</p><ol><li>使用LNMP命令的教程链接<a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html" target="_blank" rel="noopener"></a></li><li><p>直接修改Nginx配置文件，LNMP安装的软件都在<em>/user/local/</em>目录下<br> <img src="https://68.media.tumblr.com/483d9ccfeb6cccd847cf9397cb114220/tumblr_ovjlmu6vWO1strv3do1_1280.png" alt=""><br> 然后打开nginx的配置文件，如下，修改<strong>server_name</strong>添加你的主域名，我这里添加的是<a href="http://www.hackyang.cn" target="_blank" rel="noopener">www.hackyang.cn</a><br> <code>vim /usr/local/nginx/conf/nginx.conf</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen <span class="number">80</span> default_server;</span><br><span class="line">        #listen [::]:80 default_server ipv6only=on;</span><br><span class="line">        server_name www.hackyang.cn;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        root  /home/wwwroot/<span class="keyword">default</span>;</span><br><span class="line"></span><br><span class="line">        #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">        # Deny access to PHP files in specific directory</span><br><span class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">        include enable-php.conf;</span><br><span class="line"></span><br><span class="line">        location /nginx_status</span><br><span class="line">        &#123;</span><br><span class="line">            stub_status on;</span><br><span class="line">            access_log   off;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      <span class="number">30</span>d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      <span class="number">12</span>h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /home/wwwlogs/access.log;</span><br><span class="line">    &#125;</span><br><span class="line">include vhost<span class="comment">/*.conf;</span></span><br></pre></td></tr></table></figure><p>   配置完成，这里别忘了打开你的VPC的80端口哦，打开浏览器访问<a href="http://www.hackyang.cn，如出现如下页面代表安装配置服务器成功，我这里修改的是default目录，所以访问的就是nginx的页面" target="_blank" rel="noopener">www.hackyang.cn，如出现如下页面代表安装配置服务器成功，我这里修改的是default目录，所以访问的就是nginx的页面</a><br> <img src="https://68.media.tumblr.com/efc4a010db8cbc7089f3a9f222ae065b/tumblr_ovjlmu6vWO1strv3do2_r1_1280.png" alt=""></p></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;linux常用功能&quot;&gt;&lt;a href=&quot;#linux常用功能&quot; class=&quot;headerlink&quot; title=&quot;linux常用功能&quot;&gt;&lt;/a&gt;linux常用功能&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;安装卸载软件，比如mysql&lt;ul&gt;
&lt;li&gt;首先更新下仓库：&lt;code&gt;yum install -y update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装软件：&lt;code&gt;yum install mysql-server mysql-client&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;卸载软件：&lt;ol&gt;
&lt;li&gt;&lt;code&gt;yum remove mysql-server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum remove mysql-client&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum autoremove&lt;/code&gt;彻底删除，清理残留&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux 常用命令&lt;br&gt;md5校验：&lt;code&gt;md5Sum xxx.txt&lt;/code&gt;&lt;br&gt;全选删除&lt;code&gt;:%d&lt;/code&gt;、&lt;code&gt;按ggdG&lt;/code&gt;&lt;br&gt;定位：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快速到最后一行：&lt;code&gt;shift + G&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;快速到第一行： &lt;code&gt;1 + shift +G&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;快速到第n行： &lt;code&gt;n + shift + G&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装LNMP集成包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c http://soft.vpser.net/lnmp/lnmp1.4.tar.gz &amp;amp;&amp;amp; tar zxf lnmp1.4.tar.gz &amp;amp;&amp;amp; cd lnmp1.4 &amp;amp;&amp;amp; ./install.sh lnmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装完成后出现如下页面：&lt;br&gt;&lt;img src=&quot;https://lnmp.org/images/1.4/lnmp1.4-install-1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;目前提供了较多的MySQL、MariaDB版本和不安装数据库的选项，需要注意的是&lt;strong&gt;MySQL 5.6,5.7及MariaDB 10&lt;/strong&gt;必须在1G以上内存的更高配置上才能选择！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;安装完成后，如果显示Nginx: OK，MySQL: OK，PHP: OK&lt;br&gt;&lt;img src=&quot;https://lnmp.org/images/1.4/lnmp1.4-install-success.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;并且Nginx、MySQL、PHP都是running，80和3306端口都存在，并提示安装使用的时间及Install lnmp V1.4 completed! enjoy it.的话，说明已经安装成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.hackyang.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.hackyang.cn/tags/Linux/"/>
    
      <category term="vim" scheme="http://blog.hackyang.cn/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>React Native Android离线打包</title>
    <link href="http://blog.hackyang.cn/2016/11/23/React%20Native%E7%A6%BB%E7%BA%BF%E6%89%93%E5%8C%85/"/>
    <id>http://blog.hackyang.cn/2016/11/23/React Native离线打包/</id>
    <published>2016-11-23T09:22:03.000Z</published>
    <updated>2018-12-05T01:15:48.263Z</updated>
    
    <content type="html"><![CDATA[<h5 id="React-Native-Android离线打包"><a href="#React-Native-Android离线打包" class="headerlink" title="React Native Android离线打包"></a>React Native Android离线打包</h5><p>日常开发中，我通常的做法是本地连接NodeJs Server，因此所有的图片资源都是通过server拉取得，但是发布的时候，肯定不能这么做了，为了解决这个问题，就像使用原生开发一样，把资源打包的apk里面。看了下官网，也没找到一个具体的说明。那么该怎么办呢，接下来我们就讲下如何解决这个问题。<br>首先官网已经讲解了如何打包apk，这一步我就不在具体讲解了，其实很简单，如下：</p><ol><li>在app\src\main目录下新建一个assets目录；</li><li>执行命令：<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native bundle --entry-<span class="keyword">file</span> <span class="built_in">index</span>.android.js --bundle-output ./android/app/src/main/assets/<span class="built_in">index</span>.android.jsbundle --platform android --assets-dest ./android/app/src/main/<span class="keyword">res</span>/ --dev false</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>最后按照官网的教程，打包安装即可，前提是你要配置好keystore，这个官网有说明，就不做介绍了，<a href="http://facebook.github.io/react-native/releases/0.37/docs/signed-apk-android.html" target="_blank" rel="noopener">看这里</a>，在android目录下执行如下命令，</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradlew assembleRelease</span><br></pre></td></tr></table></figure><p>上面这条命令就是打包生成apk的命令，最后我们会在app\build\output\apk目录下面看到生成的apk，包括debug和release，未对齐和对齐的几个版本，发布的时候使用apk-release这个版本就行了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;React-Native-Android离线打包&quot;&gt;&lt;a href=&quot;#React-Native-Android离线打包&quot; class=&quot;headerlink&quot; title=&quot;React Native Android离线打包&quot;&gt;&lt;/a&gt;React Native A
      
    
    </summary>
    
      <category term="React Native" scheme="http://blog.hackyang.cn/categories/React-Native/"/>
    
    
      <category term="Android" scheme="http://blog.hackyang.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative编译到运行的坑</title>
    <link href="http://blog.hackyang.cn/2016/09/09/ReactNative%E7%BC%96%E8%AF%91%E5%88%B0%E8%BF%90%E8%A1%8C%E7%9A%84%E5%9D%91/"/>
    <id>http://blog.hackyang.cn/2016/09/09/ReactNative编译到运行的坑/</id>
    <published>2016-09-09T09:36:51.000Z</published>
    <updated>2018-12-05T01:15:48.263Z</updated>
    
    <content type="html"><![CDATA[<h6 id="一、搭建ReactNative环境"><a href="#一、搭建ReactNative环境" class="headerlink" title="一、搭建ReactNative环境"></a>一、搭建ReactNative环境</h6><ul><li>首先安装node.js和python2.xx版本，不要装python3.xx，这个官方是特别说明的，请注意.<br><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">NodeJs官方下载：https://nodejs.org/en/download/</a>，这里可以选择不同系统的版本，介于操作系统环境的问题，我本篇讲解在win10下安装node.js和python<br><img src="http://imglf.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kcGpCbStkalhwTmwyZmp3ZGdnRG0zc1Q5N0krRjJSdWhnPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt="NodeJs"><br><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">Python官方下载：https://www.python.org/downloads/</a>，再次提醒2.xx版本<br><img src="http://imglf2.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kZ3JDZjgzdldUNG9TV05vVDJES1ZCQ2ZxQWhHTUxBbXN3PT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt="Python2.7"></li><li><p>安装nodejs，一路默认即可，nodejs安装程序会自动加入到环境变量；python安装的时候第2步要注意，<strong>“Add python.exe to Path”</strong>这一栏，点击下拉框并选择<strong>“Entire feature will be installed on local hard drive”</strong>，如下图：<br><img src="http://imglf.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29ka2RqWGRudDIweEZGbzVkTTkrZWVkeVVPUzVLNzZNTHhBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""></p><a id="more"></a><p>打开cmd，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span>python</span><br></pre></td></tr></table></figure><p>如出现下图证明配置成功<br><img src="http://imglf2.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kdkNhL0tkVFo4US9QcC9aWUZpT3YvRDNhTU4vbUUwWDFBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""></p></li><li><p>此时，还是只能通过”python <em>.py”运行python脚本，若希望直接运行</em>.py，只需再修改另一个环境变量PATHEXT:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATHEXT=PATHEXT;.PY;.PYM</span><br></pre></td></tr></table></figure></li></ul><p>好了，到此我们的安装环境已经搭建好，下面我们开始安装react native.</p><hr><h6 id="二、安装React-Native"><a href="#二、安装React-Native" class="headerlink" title="二、安装React Native"></a>二、安装React Native</h6><ul><li>通过npm安装，首先执行如下命令</li><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g react-native-cli</span><br></pre></td></tr></table></figure><p>当然我们还需要Android的开发环境，我这里就不做介绍了。安装完成以后我们就可以开始开发项目了，先建一个ReactNative Project，工程名称<strong>AwesomeProject</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br></pre></td></tr></table></figure><p>以上命令会在前目录建立一个工程名为<strong>AwesomeProject</strong>的project，进入工程目录，工程目录结构如下图：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd AwesomeProject</span><br></pre></td></tr></table></figure><p><img src="http://imglf0.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kcFRYcTRBZCt3aGpHY1JWSk0vUEpiK29FSXF2R1ZJQS9RPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""><br>这里有个问题，大家注意下，为了提高Android的编译效率，我们要修改<a href="https://docs.gradle.org/2.9/userguide/gradle_daemon.html" target="_blank" rel="noopener">Gradle Damo</a>，打开android目录，找到<strong>gradle.properties</strong>文件，向其中添加如下代码：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.daemon=<span class="keyword">true</span></span><br><span class="line">org.gradle.parallel=<span class="keyword">true</span></span><br><span class="line">org.gradle.jvmargs=-Xmx1024m</span><br></pre></td></tr></table></figure><p>最后执行如下命令，系统就开始编译工程了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native run-android</span><br></pre></td></tr></table></figure><p>出现下图说明编译成功，这里记得要启动一个模拟器或usb连上真机，我这里是直接连接真机的.<br><img src="http://imglf1.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kcjRKOUJTZlU1anhubklwWm9tQTFRdnlES1RDK09TWUlnPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""><br>react-native会自动安装apk到你手机里面，其实就是调用adb命令安装咯，但这个时候还没办法运行，系统会提示如下错误：<br><img src="http://imglf2.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kbFA1VTlCR21TTG5kY0J3cm4rUVBCSFVDTWk0d1I5N1JRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""></p></li><li><p>解决以上问题，执行以下操作即可：</p></li></ul><ol><li><p>Android5.0以上，首先用usb连接真机，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reverse tcp:8081 tcp:8081</span><br></pre></td></tr></table></figure><p>这条命令是将手机访问服务器的端口指向8081，这里只适用于<strong>android 5.0</strong>以上.</p></li><li><p>Android 5.0以下：<br>首先保证手机连接的wifi网络和PC在同一网段下，其次打开应用程序，点击menu菜单或摇动手机，这时会出现如下界面：<br><img src="http://imglf1.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29ka3dBVjhBMVZ6eHhwVjdNakJkODJHZVFENHNYbzQ1Qnd3PT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""><br>点击<code>Dev Settings</code>选项<br><img src="http://imglf0.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kazgwdWdDWFRlb0w1SklFc0NsdU5SblZEZDBXV3BmWG1RPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""><br>然后点击Debug server host &amp; port for device这一栏，<br>在上面填入你的PC的IP地址(cmd执行:<code>ifconfig</code>命令)，然后在其中填上ip地址和端口号，react native的默认端口是8081<br><img src="http://imglf1.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kaG9pMThTc3c4QlZMRWZjc1pSbVlIMVl6NmZaOGFrclBBPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""></p></li></ol><ul><li>最后我们执行如下命令，开启服务器，保证app可访问服务器<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure></li></ul><p><img src="http://imglf2.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kaE1hbWY5TFhKVEh6SXVLRlYvT2wrUGY1VzBRYW5Ja1RRPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""><br>出现上面的页面，代表服务器开启成功，这时我们再打开app，点击menu菜单，弹出页面上选择<code>Reload</code>，第一次Reload可能要等待的久一点，最终会出现如下界面则代表app安装并运行成功了.<br><img src="http://imglf1.nosdn.127.net/img/c3pZZ1VJcCsyMGhoSXpELzFYWUZtMlRXMWNvcWFNOXhQaS9DUzZLLzdERERVZXJDY3llRGVRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;一、搭建ReactNative环境&quot;&gt;&lt;a href=&quot;#一、搭建ReactNative环境&quot; class=&quot;headerlink&quot; title=&quot;一、搭建ReactNative环境&quot;&gt;&lt;/a&gt;一、搭建ReactNative环境&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;首先安装node.js和python2.xx版本，不要装python3.xx，这个官方是特别说明的，请注意.&lt;br&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NodeJs官方下载：https://nodejs.org/en/download/&lt;/a&gt;，这里可以选择不同系统的版本，介于操作系统环境的问题，我本篇讲解在win10下安装node.js和python&lt;br&gt;&lt;img src=&quot;http://imglf.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kcGpCbStkalhwTmwyZmp3ZGdnRG0zc1Q5N0krRjJSdWhnPT0.png?imageView&amp;amp;thumbnail=1680x0&amp;amp;quality=96&amp;amp;stripmeta=0&amp;amp;type=jpg&quot; alt=&quot;NodeJs&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python官方下载：https://www.python.org/downloads/&lt;/a&gt;，再次提醒2.xx版本&lt;br&gt;&lt;img src=&quot;http://imglf2.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29kZ3JDZjgzdldUNG9TV05vVDJES1ZCQ2ZxQWhHTUxBbXN3PT0.png?imageView&amp;amp;thumbnail=1680x0&amp;amp;quality=96&amp;amp;stripmeta=0&amp;amp;type=jpg&quot; alt=&quot;Python2.7&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装nodejs，一路默认即可，nodejs安装程序会自动加入到环境变量；python安装的时候第2步要注意，&lt;strong&gt;“Add python.exe to Path”&lt;/strong&gt;这一栏，点击下拉框并选择&lt;strong&gt;“Entire feature will be installed on local hard drive”&lt;/strong&gt;，如下图：&lt;br&gt;&lt;img src=&quot;http://imglf.nosdn.127.net/img/c3pZZ1VJcCsyMGhhaUlOMTcrZ29ka2RqWGRudDIweEZGbzVkTTkrZWVkeVVPUzVLNzZNTHhBPT0.png?imageView&amp;amp;thumbnail=1680x0&amp;amp;quality=96&amp;amp;stripmeta=0&amp;amp;type=jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="React Native" scheme="http://blog.hackyang.cn/categories/React-Native/"/>
    
    
      <category term="Android" scheme="http://blog.hackyang.cn/tags/Android/"/>
    
      <category term="ios" scheme="http://blog.hackyang.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Launcher启动流程分析（一）</title>
    <link href="http://blog.hackyang.cn/2016/08/31/App%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/"/>
    <id>http://blog.hackyang.cn/2016/08/31/App启动流程分析/</id>
    <published>2016-08-31T11:06:03.000Z</published>
    <updated>2018-12-05T01:15:48.262Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Launcher分析"><a href="#Launcher分析" class="headerlink" title="Launcher分析"></a>Launcher分析</h4><p>当用户点击手机桌面上的shortIcon的时候，系统这个时候是通过Launcher这类启动app的，首先先介绍下什么是<strong>Launcher</strong>.通过查看源码知道，Launcher是继承Activity，因此Launcher简单理解他就是一个Activity，而这个Activity通常情况是不能被销毁的，相当于系统页面.我们进入<strong>onCreate</strong>函数看下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Launcher</span> <span class="keyword">extends</span> <span class="title">Activity</span></span></span><br><span class="line"><span class="class">       <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span>, <span class="title">OnLongClickListener</span>, <span class="title">LauncherModel</span>.<span class="title">Callbacks</span>,</span></span><br><span class="line"><span class="class">                  <span class="title">View</span>.<span class="title">OnTouchListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">           <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">           &lt;!--省略--&gt;</span><br><span class="line">               LauncherApplication app = ((LauncherApplication)getApplication());</span><br><span class="line">               mSharedPrefs = getSharedPreferences(LauncherApplication.getSharedPreferencesKey(),</span><br><span class="line">                       Context.MODE_PRIVATE);</span><br><span class="line">               <span class="comment">//这里绑定Launcher到LauncherModel.Callbacks的接口中</span></span><br><span class="line">               mModel = app.setLauncher(<span class="keyword">this</span>);</span><br><span class="line">               &lt;!--省略--&gt;</span><br><span class="line"></span><br><span class="line">               <span class="comment">//加载了launcher的布局文件</span></span><br><span class="line">               setContentView(R.layout.launcher);</span><br><span class="line"><span class="comment">//设置布局文件的theme属性，主要是初始化了一些UI组件，如AppWidghts（小部件）、AppTabHost（导航栏）、AppAppsCustomizeContent（这个类就是桌面放置app icon的容器）</span></span><br><span class="line">               setupViews();</span><br><span class="line">               &lt;!--省略--&gt;</span><br><span class="line">               <span class="comment">//这里加载桌面的app图标</span></span><br><span class="line">               <span class="keyword">if</span> (!mRestoring) &#123;</span><br><span class="line">                   <span class="keyword">if</span> (sPausedFromUserAction) &#123;</span><br><span class="line">                       <span class="comment">// If the user leaves launcher, then we should just load items asynchronously when</span></span><br><span class="line">                       <span class="comment">// they return.</span></span><br><span class="line">                       mModel.startLoader(<span class="keyword">true</span>, -<span class="number">1</span>);</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                       <span class="comment">// We only load the page synchronously if the user rotates (or triggers a</span></span><br><span class="line">                       <span class="comment">// configuration change) while launcher is in the foreground</span></span><br><span class="line">                       mModel.startLoader(<span class="keyword">true</span>, mWorkspace.getCurrentPage());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>布局文件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Full screen view projects under the status bar and contains the background --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:launcher</span>=<span class="string">"http://schemas.android.com/apk/res/com.android.launcher"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/launcher"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/workspace_bg"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.android.launcher2.DragLayer</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/drag_layer"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- The workspace contains 5 screens of cells --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.android.launcher2.Workspace</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/workspace"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingStart</span>=<span class="string">"@dimen/workspace_left_padding"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingEnd</span>=<span class="string">"@dimen/workspace_right_padding"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/workspace_top_padding"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/workspace_bottom_padding"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:defaultScreen</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:cellCountX</span>=<span class="string">"@integer/cell_count_x"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:cellCountY</span>=<span class="string">"@integer/cell_count_y"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:pageSpacing</span>=<span class="string">"@dimen/workspace_page_spacing"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:scrollIndicatorPaddingLeft</span>=<span class="string">"@dimen/qsb_bar_height"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:scrollIndicatorPaddingRight</span>=<span class="string">"@dimen/button_bar_height"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">android:id</span>=<span class="string">"@+id/cell1"</span> <span class="attr">layout</span>=<span class="string">"@layout/workspace_screen"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">android:id</span>=<span class="string">"@+id/cell2"</span> <span class="attr">layout</span>=<span class="string">"@layout/workspace_screen"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">android:id</span>=<span class="string">"@+id/cell3"</span> <span class="attr">layout</span>=<span class="string">"@layout/workspace_screen"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">android:id</span>=<span class="string">"@+id/cell4"</span> <span class="attr">layout</span>=<span class="string">"@layout/workspace_screen"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">android:id</span>=<span class="string">"@+id/cell5"</span> <span class="attr">layout</span>=<span class="string">"@layout/workspace_screen"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">com.android.launcher2.Workspace</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/qsb_divider"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/workspace_divider"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginStart</span>=<span class="string">"@dimen/qsb_bar_height"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/dock_divider"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/workspace_divider"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginEnd</span>=<span class="string">"@dimen/button_bar_height"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"end"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/paged_view_indicator"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/scroll_indicator"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/hotseat"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/hotseat"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"@dimen/button_bar_height_plus_padding"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"end"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/qsb_bar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">"@layout/qsb_bar"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- The Workspace cling must appear under the AppsCustomizePagedView below to ensure</span></span><br><span class="line"><span class="comment">             that it is still visible during the transition to AllApps and doesn't overlay on</span></span><br><span class="line"><span class="comment">             top of that view. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/workspace_cling"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/workspace_cling"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"gone"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/folder_cling"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/folder_cling"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"gone"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.android.launcher2.DrawableStateProxyView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/voice_button_proxy"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"@dimen/qsb_bar_height"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"@dimen/app_icon_size"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"top|start"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"64dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:onClick</span>=<span class="string">"onClickVoiceButton"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:importantForAccessibility</span>=<span class="string">"no"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">launcher:sourceViewId</span>=<span class="string">"@+id/voice_button"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/apps_customize_pane"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/apps_customize_pane"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"invisible"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.android.launcher2.DragLayer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p><!--我们主要看Workspace这个布局，它就是我们在手机上看到的分屏，通常就是桌面的屏幕，就是那个左右可滑动的容器，，每个Workspace里面含有一个CellLayout。--><p>桌面上显示的app icon都是放在apps_customize_pane.xml文件中，看下布局文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.android.launcher2.AppsCustomizeTabHost</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:launcher</span>=<span class="string">"http://schemas.android.com/apk/res/com.android.launcher"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#FF000000"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/apps_customize_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">"gone"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- The layout_width of the tab bar gets overriden to align the content</span></span><br><span class="line"><span class="comment">             with the text in the tabs in AppsCustomizeTabHost. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/tabs_container"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"@dimen/apps_customize_tab_bar_height"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"@dimen/apps_customize_tab_bar_margin_top"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.android.launcher2.FocusOnlyTabWidget</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@android:id/tabs"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@drawable/tab_unselected_holo"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:tabStripEnabled</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:divider</span>=<span class="string">"@null"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/market_button"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">layout</span>=<span class="string">"@layout/market_button"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">"end"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@android:id/tabcontent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.android.launcher2.AppsCustomizePagedView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/apps_customize_pane_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:maxAppCellCountX</span>=<span class="string">"@integer/apps_customize_maxCellCountX"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:maxAppCellCountY</span>=<span class="string">"@integer/apps_customize_maxCellCountY"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:pageLayoutWidthGap</span>=<span class="string">"@dimen/apps_customize_pageLayoutWidthGap"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:pageLayoutHeightGap</span>=<span class="string">"@dimen/apps_customize_pageLayoutHeightGap"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:pageLayoutPaddingTop</span>=<span class="string">"@dimen/apps_customize_pageLayoutPaddingTop"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:pageLayoutPaddingBottom</span>=<span class="string">"@dimen/apps_customize_pageLayoutPaddingBottom"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:pageLayoutPaddingLeft</span>=<span class="string">"@dimen/apps_customize_pageLayoutPaddingLeft"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:pageLayoutPaddingRight</span>=<span class="string">"@dimen/apps_customize_pageLayoutPaddingRight"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:widgetCellWidthGap</span>=<span class="string">"@dimen/apps_customize_widget_cell_width_gap"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:widgetCellHeightGap</span>=<span class="string">"@dimen/apps_customize_widget_cell_height_gap"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:widgetCountX</span>=<span class="string">"@integer/apps_customize_widget_cell_count_x"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:widgetCountY</span>=<span class="string">"@integer/apps_customize_widget_cell_count_y"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:clingFocusedX</span>=<span class="string">"@integer/apps_customize_cling_focused_x"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:clingFocusedY</span>=<span class="string">"@integer/apps_customize_cling_focused_y"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">launcher:maxGap</span>=<span class="string">"@dimen/workspace_max_gap"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/animation_buffer"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"#FF000000"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:visibility</span>=<span class="string">"gone"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/paged_view_indicator"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">layout</span>=<span class="string">"@layout/scroll_indicator"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">"bottom"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/all_apps_cling"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/all_apps_cling"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">"gone"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.android.launcher2.AppsCustomizeTabHost</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>核心View是AppsCustomizePagedView，它是一个展示applications, widgets, and shortcuts的ViewGroup，后面我再做详细的分析。</p><p>解释下<strong>mModel</strong>，它是一个<strong>LauncherModel</strong>实例，<strong>LauncherModel</strong>里面有许多封装的对数据库的操作。包含几个线程，其中最主要的是ApplicationsLoader和DesktopItemsLoader。ApplicationsLoader在加载所有应用程序时使用，DesktopItemsLoader在加载workspace的时候使用。其他的函数就是对数据库的封装，比如在删除，替换，添加程序的时候做更新数据库和UI的工作.这里我们看下<strong>startLoader</strong>方法:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startLoader</span><span class="params">(<span class="keyword">boolean</span> isLaunching, <span class="keyword">int</span> synchronousBindPage)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">        <span class="comment">// Don't bother to start the thread if we know it's not going to do anything</span></span><br><span class="line">        <span class="keyword">if</span> (mCallbacks != <span class="keyword">null</span> &amp;&amp; mCallbacks.get() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// If there is already one running, tell it to stop.</span></span><br><span class="line">            <span class="comment">// also, don't downgrade isLaunching if we're already running</span></span><br><span class="line">            isLaunching = isLaunching || stopLoaderLocked();</span><br><span class="line">            <span class="comment">//这里开启了一个异步线程load一个workspace的桌面配置文件</span></span><br><span class="line">            mLoaderTask = <span class="keyword">new</span> LoaderTask(mApp, isLaunching);</span><br><span class="line">            <span class="keyword">if</span> (synchronousBindPage &gt; -<span class="number">1</span> &amp;&amp; mAllAppsLoaded &amp;&amp; mWorkspaceLoaded) &#123;</span><br><span class="line">                mLoaderTask.runBindSynchronousPage(synchronousBindPage);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sWorkerThread.setPriority(Thread.NORM_PRIORITY);</span><br><span class="line">                sWorker.post(mLoaderTask);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>LoaderTask</strong>实现了runnable接口，看下它的<strong>run</strong>方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">LoaderTask</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">        <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">            mIsLoaderTaskRunning = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        keep_running:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// First step. Load workspace first, this is necessary since adding of apps from</span></span><br><span class="line">            <span class="comment">// managed profile in all apps is deferred until onResume. See http://b/17336902.</span></span><br><span class="line">            loadAndBindWorkspace();</span><br><span class="line">            <span class="keyword">if</span> (mStopped) &#123;</span><br><span class="line">                <span class="keyword">break</span> keep_running;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Second step. Load all apps.加载桌面的apps</span></span><br><span class="line">            loadAndBindAllApps();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Update the saved icons if necessary</span></span><br><span class="line">        <span class="keyword">if</span> (DEBUG_LOADERS) Log.d(TAG, <span class="string">"Comparing loaded icons to database icons"</span>);</span><br><span class="line">        <span class="keyword">synchronized</span> (sBgLock) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Object key : sBgDbIconCache.keySet()) &#123;</span><br><span class="line">                updateSavedIcon(mContext, (ShortcutInfo) key, sBgDbIconCache.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">            sBgDbIconCache.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Clear out this reference, otherwise we end up holding it until all of the</span></span><br><span class="line">        <span class="comment">// callback runnables are done.</span></span><br><span class="line">        mContext = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">            <span class="comment">// If we are still the last one to be scheduled, remove ourselves.</span></span><br><span class="line">            <span class="keyword">if</span> (mLoaderTask == <span class="keyword">this</span>) &#123;</span><br><span class="line">                mLoaderTask = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mIsLoaderTaskRunning = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码中已经做了注释，经过处理程序会执行到<strong>loadAndBindAllApps</strong>，我们直接跳转到<strong>loadAndBindAllApps</strong>方法中去看下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadAndBindAllApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//这里判断是否已经加载过app icon到桌面，如果没有就执行下面的代码</span></span><br><span class="line">    <span class="keyword">if</span> (!mAllAppsLoaded) &#123;</span><br><span class="line">        loadAllAppsByBatch();</span><br><span class="line">        <span class="keyword">synchronized</span> (LoaderTask.<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mStopped) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mAllAppsLoaded = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        onlyBindAllApps();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接着再进入<strong>loadAllAppsByBatch</strong>方法看下，首先通过mUserManager对象获取当前设备上的所有用户信息（返回一个链表），然后遍历整个列表，取得一个<strong>UserHandler</strong>对象。</p><blockquote><p><strong>UserHandler</strong>代表一个用户的设备信息，如桌面上有什么文件，哪些app是属于当前用户，哪些文件属于当前用户，当前用户拥有什么权限，都可以通过<strong>UserHandler</strong>获取.</p></blockquote><p>最后通过<strong>LauncherApps</strong>对象的<strong>getActivityList</strong>方法获取属于当前用户的app，也就是AndroidMainfest.xml文件中配置的IntentFilter标签，我们每个app都有这样一个启动程序入口activity，这里不做过多介绍了。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadAllAppsByBatch</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">// Don't use these two variables in any of the callback runnables.</span></span><br><span class="line">      <span class="comment">// Otherwise we hold a reference to them.</span></span><br><span class="line">      <span class="keyword">final</span> Callbacks oldCallbacks = mCallbacks.get();</span><br><span class="line">&lt;!--省略--&gt;</span><br><span class="line">      <span class="comment">// 获取当前设备上所有的用户配置信息</span></span><br><span class="line">      <span class="keyword">final</span> List&lt;UserHandle&gt; profiles = mUserManager.getUserProfiles();</span><br><span class="line"></span><br><span class="line">      mBgAllAppsList.clear();</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> profileCount = profiles.size();</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> p = <span class="number">0</span>; p &lt; profileCount; p++) &#123;</span><br><span class="line">          UserHandle user = profiles.get(p);</span><br><span class="line">          List&lt;LauncherActivityInfo&gt; apps = <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">int</span> N = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">int</span> startIndex;</span><br><span class="line">          <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">int</span> batchSize = -<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">while</span> (i &lt; N &amp;&amp; !mStopped) &#123;</span><br><span class="line">              <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="keyword">final</span> <span class="keyword">long</span> qiaTime = DEBUG_LOADERS ? SystemClock.uptimeMillis() : <span class="number">0</span>;</span><br><span class="line">                  <span class="comment">//这里返回所有IntenFilter标签带有LAUNCHER、MAIN的Activity</span></span><br><span class="line">                  apps = mLauncherApps.getActivityList(<span class="keyword">null</span>, user);</span><br><span class="line">                  <span class="comment">//重新排序</span></span><br><span class="line">                  Collections.sort(apps, <span class="keyword">new</span> LauncherModel.ShortcutNameComparator(mLabelCache));</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              startIndex = i;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; i&lt;N &amp;&amp; j&lt;batchSize; j++) &#123;</span><br><span class="line">                  <span class="comment">// This builds the icon bitmaps.生成桌面图标的位图，并存放到mBgAllAppsList中</span></span><br><span class="line">                  mBgAllAppsList.add(<span class="keyword">new</span> ApplicationInfo(apps.get(i), user,</span><br><span class="line">                          mIconCache, mLabelCache));</span><br><span class="line">                  i++;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//获取LauncherModel.Callback的回调，oldCallbacks是通过mCallbacks获取到的，mCallbacks是一个弱引用</span></span><br><span class="line">              <span class="keyword">final</span> Callbacks callbacks = tryGetCallbacks(oldCallbacks);</span><br><span class="line">              <span class="keyword">final</span> ArrayList&lt;ApplicationInfo&gt; added = mBgAllAppsList.added;</span><br><span class="line">              <span class="keyword">final</span> <span class="keyword">boolean</span> firstProfile = p == <span class="number">0</span>;</span><br><span class="line">              mBgAllAppsList.added = <span class="keyword">new</span> ArrayList&lt;ApplicationInfo&gt;();</span><br><span class="line">              <span class="comment">//这里使用handler post到主线程执行callBack回调，这里的callback其实就是前面说到的Launcher，Launcher本事实现了LauncherModel.Callback回调，这样load完成后就回到launcher中的回调接口中</span></span><br><span class="line">              mHandler.post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                      <span class="keyword">if</span> (callbacks != <span class="keyword">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">if</span> (firstProfile) &#123;</span><br><span class="line">                              callbacks.bindAllApplications(added);</span><br><span class="line">                          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                              callbacks.bindAppsAdded(added);</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">&lt;!--省略--&gt;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>==<strong>注意：</strong>==这里说明下<strong>Launcher</strong>是怎么绑定<strong>LauncherModel.Callback</strong>接口的，我们回到前面<strong>Launcher.onCreate</strong>函数的开头，进入<strong>LauncherApplication</strong>的<strong>setLauncher</strong>方法中.在<strong>LauncherApplication</strong>的<strong>onCreate</strong>方法中实例化了一个<strong>LauncherModel</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LauncherApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        ......................................</span><br><span class="line">        mIconCache = <span class="keyword">new</span> IconCache(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//实例化一个LauncherModel</span></span><br><span class="line">        mModel = <span class="keyword">new</span> LauncherModel(<span class="keyword">this</span>, mIconCache);</span><br><span class="line">        LauncherApps launcherApps = (LauncherApps)</span><br><span class="line">                getSystemService(Context.LAUNCHER_APPS_SERVICE);</span><br><span class="line">        launcherApps.registerCallback(mModel.getLauncherAppsCallback());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">LauncherModel <span class="title">setLauncher</span><span class="params">(Launcher launcher)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里通过LauncherModel的initialize方法注入了LauncherModel.Callback接口，这样就实现了接口绑定</span></span><br><span class="line">        mModel.initialize(launcher);</span><br><span class="line">        <span class="keyword">return</span> mModel;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后我们回到<strong>Launcher</strong>的<strong>bindAllApplications</strong>回调函数中看下。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the icons for all apps.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Implementation of the method from LauncherModel.Callbacks.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bindAllApplications</span><span class="params">(<span class="keyword">final</span> ArrayList&lt;ApplicationInfo&gt; apps)</span> </span>&#123;</span><br><span class="line">    Runnable setAllAppsRunnable = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mAppsCustomizeContent != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mAppsCustomizeContent.setApps(apps);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove the progress bar entirely; we could also make it GONE</span></span><br><span class="line">    <span class="comment">// but better to remove it since we know it's not going to be used</span></span><br><span class="line">    View progressBar = mAppsCustomizeTabHost.</span><br><span class="line">        findViewById(R.id.apps_customize_progress_bar);</span><br><span class="line">    <span class="keyword">if</span> (progressBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ((ViewGroup)progressBar.getParent()).removeView(progressBar);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We just post the call to setApps so the user sees the progress bar</span></span><br><span class="line">        <span class="comment">// disappear-- otherwise, it just looks like the progress bar froze</span></span><br><span class="line">        <span class="comment">// which doesn't look great</span></span><br><span class="line">        mAppsCustomizeTabHost.post(setAllAppsRunnable);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// If we did not initialize the spinner in onCreate, then we can directly set the</span></span><br><span class="line">        <span class="comment">// list of applications without waiting for any progress bars views to be hidden.</span></span><br><span class="line">        setAllAppsRunnable.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用了<strong>mAppsCustomizeContent.setApps</strong>方法，前面我们提到了<strong>AppsCustomizePagedView</strong>，这里我们再分析下，先看下<strong>AppsCustomizePagedView</strong>源码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppsCustomizePagedView</span> <span class="keyword">extends</span> <span class="title">PagedViewWithDraggableItems</span> <span class="keyword">implements</span></span></span><br><span class="line"><span class="class">        <span class="title">View</span>.<span class="title">OnClickListener</span>, <span class="title">View</span>.<span class="title">OnKeyListener</span>, <span class="title">DragSource</span>,</span></span><br><span class="line"><span class="class">        <span class="title">PagedViewIcon</span>.<span class="title">PressedCallback</span>, <span class="title">PagedViewWidget</span>.<span class="title">ShortPressListener</span>,</span></span><br><span class="line"><span class="class">        <span class="title">LauncherTransitionable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApps</span><span class="params">(ArrayList&lt;ApplicationInfo&gt; list)</span> </span>&#123;</span><br><span class="line">            mApps = list;</span><br><span class="line">            Collections.sort(mApps, LauncherModel.getAppNameComparator());</span><br><span class="line">            updatePageCountsAndInvalidateData();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updatePageCountsAndInvalidateData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mInBulkBind) &#123;</span><br><span class="line">                mNeedToUpdatePageCountsAndInvalidateData = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                updatePageCounts();</span><br><span class="line">                invalidateOnDataChange();</span><br><span class="line">                mNeedToUpdatePageCountsAndInvalidateData = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * We should call thise method whenever the core data changes (mApps, mWidgets) so that we can</span></span><br><span class="line"><span class="comment">         * appropriately determine when to invalidate the PagedView page data.  In cases where the data</span></span><br><span class="line"><span class="comment">         * has yet to be set, we can requestLayout() and wait for onDataReady() to be called in the</span></span><br><span class="line"><span class="comment">         * next onMeasure() pass, which will trigger an invalidatePageData() itself.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">invalidateOnDataChange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!isDataReady()) &#123;</span><br><span class="line">                <span class="comment">// The next layout pass will trigger data-ready if both widgets and apps are set, so</span></span><br><span class="line">                <span class="comment">// request a layout to trigger the page data when ready.</span></span><br><span class="line">                requestLayout();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cancelAllTasks();</span><br><span class="line">                invalidatePageData();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>首先经过<strong>updatePageCountsAndInvalidateData</strong>–&gt;&gt;<strong>invalidateOnDataChange</strong>–&gt;&gt;<strong>invalidateOnDataChange</strong>，最后会进入invalidatePageData方法，这里会调用父类invalidatePageData方法，我们继续往下看：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">invalidatePageData</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">boolean</span> immediateAndOnly)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (!mIsDataReady) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (mContentIsRefreshable) &#123;</span><br><span class="line">           <span class="comment">// Force all scrolling-related behavior to end</span></span><br><span class="line">           mScroller.forceFinished(<span class="keyword">true</span>);</span><br><span class="line">           mNextPage = INVALID_PAGE;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Update all the pages</span></span><br><span class="line">           syncPages();</span><br><span class="line"></span><br><span class="line">           <span class="comment">// We must force a measure after we've loaded the pages to update the content width and</span></span><br><span class="line">           <span class="comment">// to determine the full scroll width</span></span><br><span class="line">           measure(MeasureSpec.makeMeasureSpec(getMeasuredWidth(), MeasureSpec.EXACTLY),</span><br><span class="line">                   MeasureSpec.makeMeasureSpec(getMeasuredHeight(), MeasureSpec.EXACTLY));</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Set a new page as the current page if necessary</span></span><br><span class="line">           <span class="keyword">if</span> (currentPage &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">               setCurrentPage(Math.min(getPageCount() - <span class="number">1</span>, currentPage));</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Mark each of the pages as dirty</span></span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">int</span> count = getChildCount();</span><br><span class="line">           mDirtyPageContent.clear();</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">               mDirtyPageContent.add(<span class="keyword">true</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Load any pages that are necessary for the current window of views</span></span><br><span class="line">           <span class="comment">//关键代码，这里会加载桌面View</span></span><br><span class="line">           loadAssociatedPages(mCurrentPage, immediateAndOnly);</span><br><span class="line">           requestLayout();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//加载桌面程序icons等</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">loadAssociatedPages</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">boolean</span> immediateAndOnly)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (mContentIsRefreshable) &#123;</span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">int</span> count = getChildCount();</span><br><span class="line">           <span class="keyword">if</span> (page &lt; count) &#123;</span><br><span class="line">               <span class="keyword">int</span> lowerPageBound = getAssociatedLowerPageBound(page);</span><br><span class="line">               <span class="keyword">int</span> upperPageBound = getAssociatedUpperPageBound(page);</span><br><span class="line">               <span class="comment">// First, clear any pages that should no longer be loaded</span></span><br><span class="line">               <span class="comment">//先做一些清理工作，这里涉及到view重用机制，不再讲解了</span></span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">                   Page layout = (Page) getPageAt(i);</span><br><span class="line">                   <span class="keyword">if</span> ((i &lt; lowerPageBound) || (i &gt; upperPageBound)) &#123;</span><br><span class="line">                       <span class="keyword">if</span> (layout.getPageChildCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                           layout.removeAllViewsOnPage();</span><br><span class="line">                       &#125;</span><br><span class="line">                       mDirtyPageContent.set(i, <span class="keyword">true</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">// Next, load any new pages</span></span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">                   <span class="keyword">if</span> ((i != page) &amp;&amp; immediateAndOnly) &#123;</span><br><span class="line">                       <span class="keyword">continue</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="comment">//找到当前页面对应的Page，然后调用syncPageItems，这个函数里面就是向桌面上添加views组件</span></span><br><span class="line">                   <span class="keyword">if</span> (lowerPageBound &lt;= i &amp;&amp; i &lt;= upperPageBound) &#123;</span><br><span class="line">                       <span class="keyword">if</span> (mDirtyPageContent.get(i)) &#123;</span><br><span class="line">                           syncPageItems(i, (i == page) &amp;&amp; immediateAndOnly);</span><br><span class="line">                           mDirtyPageContent.set(i, <span class="keyword">false</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>Ok，上面的代码里面，我已经做了注释，讲的比较清楚了，我们直接跳到<strong>syncPageItems</strong>方法里面看下它做的操作，这个函数里面就是往桌面上添加view，就像我们平常往ViewGrounp里面addView一样，比较好理解了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">syncPageItems</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">boolean</span> immediate)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (page &lt; mNumAppsPages) &#123;</span><br><span class="line">           syncAppsPageItems(page, immediate);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           syncWidgetPageItems(page, immediate);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">syncAppsPageItems</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">boolean</span> immediate)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// ensure that we have the right number of items on the pages</span></span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">boolean</span> isRtl = isLayoutRtl();</span><br><span class="line">       <span class="keyword">int</span> numCells = mCellCountX * mCellCountY;</span><br><span class="line">       <span class="keyword">int</span> startIndex = page * numCells;</span><br><span class="line">       <span class="keyword">int</span> endIndex = Math.min(startIndex + numCells, mApps.size());</span><br><span class="line">       PagedViewCellLayout layout = (PagedViewCellLayout) getPageAt(page);</span><br><span class="line"></span><br><span class="line">       layout.removeAllViewsOnPage();</span><br><span class="line">       ArrayList&lt;Object&gt; items = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">       ArrayList&lt;Bitmap&gt; images = <span class="keyword">new</span> ArrayList&lt;Bitmap&gt;();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = startIndex; i &lt; endIndex; ++i) &#123;</span><br><span class="line">           ApplicationInfo info = mApps.get(i);</span><br><span class="line">           PagedViewIcon icon = (PagedViewIcon) mLayoutInflater.inflate(</span><br><span class="line">                   R.layout.apps_customize_application, layout, <span class="keyword">false</span>);</span><br><span class="line">           icon.applyFromApplicationInfo(info, <span class="keyword">true</span>, <span class="keyword">this</span>);</span><br><span class="line">           icon.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">           icon.setOnLongClickListener(<span class="keyword">this</span>);</span><br><span class="line">           icon.setOnTouchListener(<span class="keyword">this</span>);</span><br><span class="line">           icon.setOnKeyListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">           <span class="keyword">int</span> index = i - startIndex;</span><br><span class="line">           <span class="keyword">int</span> x = index % mCellCountX;</span><br><span class="line">           <span class="keyword">int</span> y = index / mCellCountX;</span><br><span class="line">           <span class="keyword">if</span> (isRtl) &#123;</span><br><span class="line">               x = mCellCountX - x - <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           layout.addViewToCellLayout(icon, -<span class="number">1</span>, i, <span class="keyword">new</span> PagedViewCellLayout.LayoutParams(x,y, <span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">           items.add(info);</span><br><span class="line">           images.add(info.iconBitmap);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       enableHwLayersOnVisiblePages();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>最后从mApps对象里面取出所有的app信息，并添加点击事件，将App图标添加到桌面上，这时我们就可以在onClick回掉中找到启动app的代码了，具体如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// When we have exited all apps or are in transition, disregard clicks</span></span><br><span class="line">    <span class="keyword">if</span> (!mLauncher.isAllAppsVisible() ||</span><br><span class="line">            mLauncher.getWorkspace().isSwitchingState()) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (v <span class="keyword">instanceof</span> PagedViewIcon) &#123;</span><br><span class="line">        <span class="comment">// Animate some feedback to the click</span></span><br><span class="line">        <span class="keyword">final</span> ApplicationInfo appInfo = (ApplicationInfo) v.getTag();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Lock the drawable state to pressed until we return to Launcher</span></span><br><span class="line">        <span class="comment">//这里锁定app点击，防止二次点击启动2个app程序</span></span><br><span class="line">        <span class="keyword">if</span> (mPressedIcon != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mPressedIcon.lockDrawableState();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> We want all transitions from launcher to act as if the wallpaper were enabled</span></span><br><span class="line">        <span class="comment">// to be consistent.  So re-enable the flag here, and we will re-disable it as necessary</span></span><br><span class="line">        <span class="comment">// when Launcher resumes and we are still in AllApps.</span></span><br><span class="line">        mLauncher.updateWallpaperVisibility(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//最后调用launcher里面的startActivitySafely方法，这里就启动了app</span></span><br><span class="line">        mLauncher.startActivitySafely(v, appInfo.intent, appInfo);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (v <span class="keyword">instanceof</span> PagedViewWidget) &#123;</span><br><span class="line">        <span class="comment">// Let the user know that they have to long press to add a widget</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Launcher分析&quot;&gt;&lt;a href=&quot;#Launcher分析&quot; class=&quot;headerlink&quot; title=&quot;Launcher分析&quot;&gt;&lt;/a&gt;Launcher分析&lt;/h4&gt;&lt;p&gt;当用户点击手机桌面上的shortIcon的时候，系统这个时候是通过Launcher这类启动app的，首先先介绍下什么是&lt;strong&gt;Launcher&lt;/strong&gt;.通过查看源码知道，Launcher是继承Activity，因此Launcher简单理解他就是一个Activity，而这个Activity通常情况是不能被销毁的，相当于系统页面.我们进入&lt;strong&gt;onCreate&lt;/strong&gt;函数看下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Launcher&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;OnClickListener&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;OnLongClickListener&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;LauncherModel&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Callbacks&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;                  &lt;span class=&quot;title&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;OnTouchListener&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&amp;lt;!--省略--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               LauncherApplication app = ((LauncherApplication)getApplication());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               mSharedPrefs = getSharedPreferences(LauncherApplication.getSharedPreferencesKey(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       Context.MODE_PRIVATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//这里绑定Launcher到LauncherModel.Callbacks的接口中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               mModel = app.setLauncher(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;!--省略--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//加载了launcher的布局文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               setContentView(R.layout.launcher);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//设置布局文件的theme属性，主要是初始化了一些UI组件，如AppWidghts（小部件）、AppTabHost（导航栏）、AppAppsCustomizeContent（这个类就是桌面放置app icon的容器）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               setupViews();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;!--省略--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//这里加载桌面的app图标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mRestoring) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sPausedFromUserAction) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;comment&quot;&gt;// If the user leaves launcher, then we should just load items asynchronously when&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;comment&quot;&gt;// they return.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       mModel.startLoader(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;comment&quot;&gt;// We only load the page synchronously if the user rotates (or triggers a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;comment&quot;&gt;// configuration change) while launcher is in the foreground&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       mModel.startLoader(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, mWorkspace.getCurrentPage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://blog.hackyang.cn/categories/android/"/>
    
    
      <category term="Android" scheme="http://blog.hackyang.cn/tags/Android/"/>
    
      <category term="Launcher" scheme="http://blog.hackyang.cn/tags/Launcher/"/>
    
  </entry>
  
  <entry>
    <title>Multidex拆分包原理解析</title>
    <link href="http://blog.hackyang.cn/2016/08/26/multidex%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/"/>
    <id>http://blog.hackyang.cn/2016/08/26/multidex原理解析/</id>
    <published>2016-08-26T15:02:03.000Z</published>
    <updated>2018-12-05T01:15:48.266Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、Android虚拟机加载class原理"><a href="#一、Android虚拟机加载class原理" class="headerlink" title="一、Android虚拟机加载class原理"></a>一、Android虚拟机加载class原理</h5><p>我们知道Java在运行时加载对应的类是通过ClassLoader来实现的，ClassLoader本身是一个抽象来，Android中使用PathClassLoader类作为Android的默认的类加载器，<br>PathClassLoader其实实现的就是简单的从文件系统中加载类文件。PathClassLoade本身继承自BaseDexClasoader，BaseDexClassLoader重写了findClass方法。<br>详细的可以看这篇文章：<a href="http://note.youdao.com/" target="_blank" rel="noopener">Android热更新实现原理</a>，本篇文章不做介绍，这里只从源码上讲解multidex的实现原理。<br><a id="more"></a></p><h5 id="二、源码解析"><a href="#二、源码解析" class="headerlink" title="二、源码解析"></a>二、源码解析</h5><ol><li>首先从<strong>Multidex.install</strong>方法开始分析，以下是<strong>install</strong>的核心代码：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">install</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    Log.i(TAG, <span class="string">"install"</span>);</span><br><span class="line">    <span class="keyword">if</span> (IS_VM_MULTIDEX_CAPABLE) &#123;</span><br><span class="line">        Log.i(TAG, <span class="string">"VM has multidex support, MultiDex support library is disabled."</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; MIN_SDK_VERSION) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Multi dex installation failed. SDK "</span> + Build.VERSION.SDK_INT</span><br><span class="line">            + <span class="string">" is unsupported. Min SDK version is "</span> + MIN_SDK_VERSION + <span class="string">"."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ApplicationInfo applicationInfo = getApplicationInfo(context);</span><br><span class="line">        <span class="keyword">if</span> (applicationInfo == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// Looks like running on a test Context, so just return without patching.</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span> (installedApk) &#123;</span><br><span class="line">            String apkPath = applicationInfo.sourceDir;</span><br><span class="line">            <span class="keyword">if</span> (installedApk.contains(apkPath)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            installedApk.add(apkPath);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt; MAX_SUPPORTED_SDK_VERSION) &#123;</span><br><span class="line">......</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ClassLoader loader;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//这里获取到BaseDexClassLoader的类加载器。</span></span><br><span class="line">                loader = context.getClassLoader();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (loader == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">              clearOldDexDir(context);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            File dexDir = <span class="keyword">new</span> File(applicationInfo.dataDir, SECONDARY_FOLDER_NAME);</span><br><span class="line">            List&lt;File&gt; files = MultiDexExtractor.load(context, applicationInfo, dexDir, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (checkValidZipFiles(files)) &#123;</span><br><span class="line">            <span class="comment">//这里加载第二个dex文件</span></span><br><span class="line">                installSecondaryDexes(loader, dexDir, files);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Try again, but this time force a reload of the zip file.</span></span><br><span class="line">                files = MultiDexExtractor.load(context, applicationInfo, dexDir, <span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">if</span> (checkValidZipFiles(files)) &#123;</span><br><span class="line">                    installSecondaryDexes(loader, dexDir, files);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// Second time didn't work, give up</span></span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Zip files were not valid."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">"Multidex installation failure"</span>, e);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Multi dex installation failed ("</span> + e.getMessage() + <span class="string">")."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Log.i(TAG, <span class="string">"install done"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先分析下面这段代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> IS_VM_MULTIDEX_CAPABLE = isVMMultidexCapable(System.getProperty(<span class="string">"java.vm.version"</span>));</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MIN_SDK_VERSION = <span class="number">4</span>; <span class="comment">//4是android 1.6</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">install</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">      Log.i(TAG, <span class="string">"install"</span>);</span><br><span class="line">      <span class="comment">//isVMMultidexCapable()方法,判断虚拟机是否支持multidex</span></span><br><span class="line">      <span class="keyword">if</span> (IS_VM_MULTIDEX_CAPABLE) &#123;</span><br><span class="line">          Log.i(TAG, <span class="string">"VM has multidex support, MultiDex support library is disabled."</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//在sdk1.6以前是不支持multidex的</span></span><br><span class="line">      <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; MIN_SDK_VERSION) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Multi dex installation failed. SDK "</span> + Build.VERSION.SDK_INT</span><br><span class="line">                  + <span class="string">" is unsupported. Min SDK version is "</span> + MIN_SDK_VERSION + <span class="string">"."</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      .......</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>我们看下<strong>isVMMultidexCapable</strong>方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里的versionString是 java.vm.version</span></span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isVMMultidexCapable</span><span class="params">(String versionString)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">boolean</span> isMultidexCapable = <span class="keyword">false</span>;</span><br><span class="line">       <span class="keyword">if</span> (versionString != <span class="keyword">null</span>) &#123;</span><br><span class="line">           Matcher matcher = Pattern.compile(<span class="string">"(\\d+)\\.(\\d+)(\\.\\d+)?"</span>).matcher(versionString);</span><br><span class="line">           <span class="keyword">if</span> (matcher.matches()) &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="keyword">int</span> major = Integer.parseInt(matcher.group(<span class="number">1</span>));</span><br><span class="line">                   <span class="keyword">int</span> minor = Integer.parseInt(matcher.group(<span class="number">2</span>));</span><br><span class="line">                   isMultidexCapable = (major &gt; VM_WITH_MULTIDEX_VERSION_MAJOR)</span><br><span class="line">                           || ((major == VM_WITH_MULTIDEX_VERSION_MAJOR)</span><br><span class="line">                                   &amp;&amp; (minor &gt;= VM_WITH_MULTIDEX_VERSION_MINOR));</span><br><span class="line">               &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                   <span class="comment">// let isMultidexCapable be false</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       Log.i(TAG, <span class="string">"VM with version "</span> + versionString + (isMultidexCapable ? <span class="string">" has multidex support"</span> : <span class="string">" does not have multidex support"</span>));</span><br><span class="line">       <span class="keyword">return</span> isMultidexCapable;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>getProperty()的参数：</p><table><thead><tr><th style="text-align:center">mean</th><th style="text-align:center">name</th><th style="text-align:center">example</th></tr></thead><tbody><tr><td style="text-align:center">java.vm.version</td><td style="text-align:center">VM implementation version</td><td style="text-align:center">1.2.0</td></tr></tbody></table><p>这里主要判断虚拟机是否已经支持multidex，如不支持就直接返回。</p><p>继续分析，经过一系列的判断，验证等步骤，最终会执行<strong>installSecondaryDexes</strong>方法，这个方法才是加载我们拆分的dex文件：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">installSecondaryDexes</span><span class="params">(ClassLoader loader, File dexDir, List&lt;File&gt; files)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IllegalArgumentException, IllegalAccessException, NoSuchFieldException,</span></span><br><span class="line"><span class="function">        InvocationTargetException, NoSuchMethodException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!files.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</span><br><span class="line">            V19.install(loader, files, dexDir);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">14</span>) &#123;</span><br><span class="line">            V14.install(loader, files, dexDir);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            V4.install(loader, files);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>首先判断，当前的sdk版本，有3个不同的方法，分别是V19 V14 V4，我们分析下<strong>V19.install</strong>方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">install</span><span class="params">(ClassLoader loader, List&lt;File&gt; additionalClassPathEntries,</span></span></span><br><span class="line"><span class="function"><span class="params">        File optimizedDirectory)</span> <span class="keyword">throws</span> IllegalArgumentException, IllegalAccessException,</span></span><br><span class="line"><span class="function">                NoSuchFieldException, InvocationTargetException, NoSuchMethodException </span>&#123;</span><br><span class="line">    <span class="comment">/* The patched class loader is expected to be a descendant of</span></span><br><span class="line"><span class="comment">     * dalvik.system.BaseDexClassLoader. We modify its</span></span><br><span class="line"><span class="comment">     * dalvik.system.DexPathList pathList field to append additional DEX</span></span><br><span class="line"><span class="comment">     * file entries.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="comment">//这里通过反射获取BaseClassLoader中的变量名为”pathList“ Field</span></span><br><span class="line">    Field pathListField = findField(loader, <span class="string">"pathList"</span>);</span><br><span class="line">    <span class="comment">//这里拿到pathList这个对象</span></span><br><span class="line">    Object dexPathList = pathListField.get(loader);</span><br><span class="line">    ArrayList&lt;IOException&gt; suppressedExceptions = <span class="keyword">new</span> ArrayList&lt;IOException&gt;();</span><br><span class="line">    <span class="comment">//关键步骤，反射调用makeDexElements函数，</span></span><br><span class="line">    expandFieldArray(dexPathList, <span class="string">"dexElements"</span>, makeDexElements(dexPathList, </span><br><span class="line">    <span class="keyword">new</span> ArrayList&lt;File&gt;(additionalClassPathEntries), optimizedDirectory, suppressedExceptions));</span><br><span class="line">    <span class="keyword">if</span> (suppressedExceptions.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (IOException e : suppressedExceptions) &#123;</span><br><span class="line">            Log.w(TAG, <span class="string">"Exception in makeDexElement"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        Field suppressedExceptionsField = findField(loader, <span class="string">"dexElementsSuppressedExceptions"</span>);</span><br><span class="line">        IOException[] dexElementsSuppressedExceptions = (IOException[]) suppressedExceptionsField.get(loader);</span><br><span class="line">        <span class="keyword">if</span> (dexElementsSuppressedExceptions == <span class="keyword">null</span>) &#123;</span><br><span class="line">            dexElementsSuppressedExceptions = suppressedExceptions.toArray(<span class="keyword">new</span> IOException[suppressedExceptions.size()]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            IOException[] combined = <span class="keyword">new</span> IOException[suppressedExceptions.size() + dexElementsSuppressedExceptions.length];</span><br><span class="line">            suppressedExceptions.toArray(combined);</span><br><span class="line">            System.arraycopy(dexElementsSuppressedExceptions, <span class="number">0</span>, combined, suppressedExceptions.size(), dexElementsSuppressedExceptions.length);</span><br><span class="line">            dexElementsSuppressedExceptions = combined;</span><br><span class="line">        &#125;</span><br><span class="line">        suppressedExceptionsField.set(loader, dexElementsSuppressedExceptions);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里的pathDexList是BaseClassLoader下面的一个成员变量，它的类型是DexPathList，这个类主要负责加载Dex并重组；接着看下expandFieldArray的源码，这个函数主要的目的是，先通过反射拿到名为dexElements的field，这个dexElements就是我们刚刚说的Elements数组，然后将刚刚makeDexElements生成的Elements数组放在dexElements的首部，makeDexElements生成的数组就是加载Dex文件的数组，这样就完成了将dex的class放在ClassLoader前面的功能。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Replace the value of a field containing a non null array, by a new array containing the</span></span><br><span class="line"><span class="comment"> * elements of the original array plus the elements of extraElements.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> instance the instance whose field is to be modified.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fieldName the field to modify.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> extraElements elements to append at the end of the array.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">expandFieldArray</span><span class="params">(Object instance, String fieldName,</span></span></span><br><span class="line"><span class="function"><span class="params">        Object[] extraElements)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalArgumentException,</span></span><br><span class="line"><span class="function">        IllegalAccessException </span>&#123;</span><br><span class="line">    Field jlrField = findField(instance, fieldName);</span><br><span class="line">    Object[] original = (Object[]) jlrField.get(instance);</span><br><span class="line">    Object[] combined = (Object[]) Array.newInstance(</span><br><span class="line">            original.getClass().getComponentType(), original.length + extraElements.length);</span><br><span class="line">    System.arraycopy(original, <span class="number">0</span>, combined, <span class="number">0</span>, original.length);</span><br><span class="line">    System.arraycopy(extraElements, <span class="number">0</span>, combined, original.length, extraElements.length);</span><br><span class="line">    jlrField.set(instance, combined);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后分析下makeDexElements这个函数，首先调用的是V19下面的makeDexElements函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A wrapper around</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> private static final dalvik.system.DexPathList#makeDexElements&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Object[] makeDexElements(bject dexPathList, ArrayList&lt;File&gt; files, File optimizedDirectory, ArrayList&lt;IOException&gt; suppressedExceptions) <span class="keyword">throws</span> IllegalAccessException, InvocationTargetException, NoSuchMethodException &#123;</span><br><span class="line">    Method makeDexElements = findMethod(dexPathList, <span class="string">"makeDexElements"</span>, ArrayList.class, File.class, ArrayList.class);</span><br><span class="line">    <span class="keyword">return</span> (Object[]) makeDexElements.invoke(dexPathList, files, optimizedDirectory, suppressedExceptions);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事实上，也是通过反射调用DexPathList里面的makeDexElements方法，具体就不做分析。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Element[] makeDexElements(ArrayList&lt;File&gt; files, File optimizedDirectory, ArrayList&lt;IOException&gt; suppressedExceptions) &#123;</span><br><span class="line">    ArrayList&lt;Element&gt; elements = <span class="keyword">new</span> ArrayList&lt;Element&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">        File zip = <span class="keyword">null</span>;</span><br><span class="line">        DexFile dex = <span class="keyword">null</span>;</span><br><span class="line">        String name = file.getName();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">            elements.add(<span class="keyword">new</span> Element(file, <span class="keyword">true</span>, <span class="keyword">null</span>, <span class="keyword">null</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (file.isFile())&#123;</span><br><span class="line">            <span class="keyword">if</span> (name.endsWith(DEX_SUFFIX)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    dex = loadDexFile(file, optimizedDirectory);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">                    System.logE(<span class="string">"Unable to load dex file: "</span> + file, ex);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                zip = file;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    dex = loadDexFile(file, optimizedDirectory);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException suppressed) &#123;</span><br><span class="line">                    suppressedExceptions.add(suppressed);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.logW(<span class="string">"ClassLoader referenced unknown path: "</span> + file);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((zip != <span class="keyword">null</span>) || (dex != <span class="keyword">null</span>)) &#123;</span><br><span class="line">            elements.add(<span class="keyword">new</span> Element(file, <span class="keyword">false</span>, zip, dex));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> elements.toArray(<span class="keyword">new</span> Element[elements.size()]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、Android虚拟机加载class原理&quot;&gt;&lt;a href=&quot;#一、Android虚拟机加载class原理&quot; class=&quot;headerlink&quot; title=&quot;一、Android虚拟机加载class原理&quot;&gt;&lt;/a&gt;一、Android虚拟机加载class原理&lt;/h5&gt;&lt;p&gt;我们知道Java在运行时加载对应的类是通过ClassLoader来实现的，ClassLoader本身是一个抽象来，Android中使用PathClassLoader类作为Android的默认的类加载器，&lt;br&gt;PathClassLoader其实实现的就是简单的从文件系统中加载类文件。PathClassLoade本身继承自BaseDexClasoader，BaseDexClassLoader重写了findClass方法。&lt;br&gt;详细的可以看这篇文章：&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android热更新实现原理&lt;/a&gt;，本篇文章不做介绍，这里只从源码上讲解multidex的实现原理。&lt;br&gt;
    
    </summary>
    
      <category term="android" scheme="http://blog.hackyang.cn/categories/android/"/>
    
    
      <category term="Android" scheme="http://blog.hackyang.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Mvp软件设计模式分析</title>
    <link href="http://blog.hackyang.cn/2016/08/23/mvp%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/"/>
    <id>http://blog.hackyang.cn/2016/08/23/mvp设计模式详解/</id>
    <published>2016-08-23T12:14:41.000Z</published>
    <updated>2018-12-05T01:15:48.266Z</updated>
    
    <content type="html"><![CDATA[<h4 id="为什么需要软件设计模式？"><a href="#为什么需要软件设计模式？" class="headerlink" title="为什么需要软件设计模式？"></a>为什么需要软件设计模式？</h4><h5 id="我们先来定义什么是好的软件架构："><a href="#我们先来定义什么是好的软件架构：" class="headerlink" title="我们先来定义什么是好的软件架构："></a>我们先来定义什么是好的软件架构：</h5><blockquote><ol><li>软件架构上具有明确的分工，各个模块的功能职责平衡分配，且明确。</li><li>可测试性，通常良好的软件架构都具备良好的可测试性。</li><li>良好的易用性，维护成本低。</li></ol></blockquote><h6 id="为什么需要模块分工？"><a href="#为什么需要模块分工？" class="headerlink" title="为什么需要模块分工？"></a>为什么需要模块分工？</h6><p>良好的模块分工，可以大大简化我们对代码的理解难度。虽然通过大量的开发工作，可以训练我们的大脑去分析越来越复杂的逻辑，但是人总有极限，而且简单的逻辑更容易理解、不容易出错，所以，遵循单一职责原则，将复杂的业务逻辑分解。<br><a id="more"></a></p><h6 id="为什么需要良好的可测试性？"><a href="#为什么需要良好的可测试性？" class="headerlink" title="为什么需要良好的可测试性？"></a>为什么需要良好的可测试性？</h6><p>对于深知单元测试好处的开发者来说，这并不是一个问题。单元测试可以大大地减少程序运行时才能发现的问题，这通常可以节省「用户反馈」-&gt;「Bug修复」-&gt;「新版本发布」-&gt;「用户安装新版本」这个耗时长达一周以上的过程。所以，程序的可测试性对于程序的稳定性是异常重要的。</p><h6 id="为什么需要良好的易用性？"><a href="#为什么需要良好的易用性？" class="headerlink" title="为什么需要良好的易用性？"></a>为什么需要良好的易用性？</h6><p>毋庸置疑，最好的代码是还没被写出来的代码。因此，越少的代码，意味着越少的 bugs。这也意味着尽量以最少的代码实现相同的功能，并非意味着这个开发者懒惰，同时，也不能不看维护成本而盲目赞同一个看似聪明的方案。</p><hr><h4 id="二-什么是MVP架构？"><a href="#二-什么是MVP架构？" class="headerlink" title="二.什么是MVP架构？"></a>二.什么是MVP架构？</h4><p><strong>MVP</strong>是单词<strong>Model View Presenter</strong>的首字母的缩写，分别表示数据层、视图层、发布层，它是MVC架构的一种演变。作为一种新的模式，MVP与MVC有着一个重大的区别：在MVP中View并不直接使用Model，它们之间的通信是通过Presenter (MVC中的Controller)来进行的，所有的交互都发生在Presenter内部，而在MVC中View会直接从Model中读取数据而不是通过 Controller。<br>首先我们先看下传统的MVC架构Model View Controller，我们把业务逻辑放到C层（ios的<strong>ViewController</strong>,android的<strong>Activity&amp;Fragment</strong>），但是这里会引入另外一个问题，所有的逻辑都在C层，不可避免的会造成C层非常复杂，如果项目越来越大，C层的代码会更加臃肿，维护起来也非常麻烦，而且也没办法==简单的==做单元测试，试想做一个单元测试我们要加入多少逻辑代码？<br><img src="http://upload-images.jianshu.io/upload_images/1858247-f517d209e937a435.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>综上所述我们总结下，现有的MVC模式存在以下问题：</p><ol><li><p><strong>视图与控制器间的过于紧密的连接</strong></p><blockquote><p>视图与控制器是相互分离，但却是联系紧密的部件，视图没有控制器的存在，其应用是很有限的，反之亦然，这样就妨碍了他们的独立重用。</p></blockquote></li><li><p><strong>视图对模型数据的低效率访问</strong></p><blockquote><p>依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问，也将损害操作性能。</p></blockquote></li><li><p><strong>不太友好的单元测试</strong></p><blockquote><p>特别是App上做单元测试的时候很多东西依赖与系统框架，没法脱离用户接口来测试这些逻辑单元。使用MVP对Presenter的测试–不需要使用自动化的测试工具。 我们可以在Model和View都没有完成时候，就可以通过编写Mock Object（即实现了Model和View的接口，但没有具体的内容的）来测试Presenter的逻辑。</p></blockquote></li></ol><p>基于以上几点问题，就衍生了出了一些软件设计模式如MVP，MVVW。为什么是MVP？我们先看下面这张图</p><p><img src="http://upload-images.jianshu.io/upload_images/1858247-57db1c3f3fa9380d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ol><li><p>MVP分离了view和model层，Presenter层充当了桥梁的角色，View层只负责更新界面即可，这里的View我们要明白只是一个viewinterface，它是视图的接口，这样我们在做单元测试的时候可以非常方便编写Presenter层代码。关于mvp的代码测试，我们可以参考google给出的代码，google现在也在推行mvp，为此google发布了一些案例，大家可参考这里<a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="noopener">android-architecture</a><br><img src="https://github.com/googlesamples/android-architecture/wiki/images/mvp-clean.png" alt=""></p></li><li><p>厚重的Controller层代码也得到了释放，之前我们开发的时候会对UIViewController、Activity、Fragment编写很多的业务逻辑，尽管大家会将Service层做分离，如net层，DB层等，但还是无法避免类似的问题，activity uicontroller无法重复利用是非常难以忍受的。</p></li><li>有一点还需要注意，presenter是双向绑定的关系，因此，在设计的时候就要注意接口和抽象的使用，尽可能的降低代码的耦合度，这也是mvp的宗旨。</li></ol><p><strong>so，转向mvp吧！我们先看下MVP几个单词的意思，以下是我个人的理解：</strong></p><ul><li><strong>View</strong>: 是显示数据（model）并且将用户指令（events）传送到presenter以便作用于那些数据的一个接口。View通常含有Presenter的引用。在Android开发中通常将Activity或者Fragment作为View层。</li><li><strong>Model</strong>: 对于Model层也是数据层。它区别于MVC架构中的Model，在这里不仅仅只是数据模型。在MVP架构中Model它负责对数据的存取操作，例如对数据库的读写，网络的数据的请求等。</li><li><strong>Presenter</strong>:对于Presenter层他是连接View层与Model层的桥梁并对业务逻辑进行处理。在MVP架构中Model与View无法直接进行交互。所以在Presenter层它会从Model层获得所需要的数据，进行一些适当的处理后交由View层进行显示。这样通过Presenter将View与Model进行隔离，使得View和Model之间不存在耦合，同时也将业务逻辑从View中抽离。</li></ul><h4 id="三-实例"><a href="#三-实例" class="headerlink" title="三.实例"></a>三.实例</h4><p>接下来我们看一个使用的用例吧，这个demo相对来说非常简单，下面是项目的架构，一个Activity，一个Fragment，Data层主要负责获取App已安装的应用列表，AppListPresenter负责业务逻辑处理</p><p><img src="http://upload-images.jianshu.io/upload_images/1858247-880d79faaa1e27b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>我们先看下presenter，viewinterface的结构</p><p><img src="http://upload-images.jianshu.io/upload_images/1858247-6db3d94abc02b9dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><img src="http://upload-images.jianshu.io/upload_images/1858247-eef3002b1318feac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">!</p><ul><li>AppListFragment的代码<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppListFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> <span class="keyword">implements</span> <span class="title">AppViewInterface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> Presenter presenter;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> List&lt;PackageInfo&gt; packageInfoList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      <span class="keyword">private</span> RecyclerView recyclerView;</span><br><span class="line">      <span class="keyword">private</span> MyAppListRecyclerViewAdapter myAppListRecyclerViewAdapter;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showAppList</span><span class="params">(List&lt;PackageInfo&gt; packageInfos)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (packageInfos.isEmpty())</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          packageInfoList.clear();</span><br><span class="line">          packageInfoList.addAll(packageInfos);</span><br><span class="line">          myAppListRecyclerViewAdapter.notifyDataSetChanged();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPresenter</span><span class="params">(Presenter presenter)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.presenter = presenter;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><p>代码比较容易理解，AppListFragment实现了AppViewInterface接口，我们需要在Activity中把AppListPresenter和AppViewInterface双向绑定。</p><ul><li>接下来看下AppListPresenter层的代码，这里只列出了几个关键方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppListPresenter</span> <span class="keyword">implements</span> <span class="title">Presenter</span>, <span class="title">LoaderManager</span>.<span class="title">LoaderCallbacks</span>&lt;<span class="title">List</span>&lt;<span class="title">PackageInfo</span>&gt;&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">private</span> AppViewInterface viewInterface;</span><br><span class="line">       <span class="keyword">private</span> AppClassLoader appClassLoader;</span><br><span class="line">       <span class="keyword">private</span> LoaderManager loaderManager;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> id = <span class="number">0</span>;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">AppListPresenter</span><span class="params">(AppViewInterface viewInterface, AppClassLoader appClassLoader, </span></span></span><br><span class="line"><span class="function"><span class="params">       LoaderManager loaderManager)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.viewInterface = viewInterface;</span><br><span class="line">           <span class="keyword">this</span>.appClassLoader = appClassLoader;</span><br><span class="line">           <span class="keyword">this</span>.loaderManager = loaderManager;</span><br><span class="line">           viewInterface.setPresenter(<span class="keyword">this</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadInstallApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment">//通过loadmanager提供的方法获取安装的应用列表</span></span><br><span class="line">           loaderManager.initLoader(id, <span class="keyword">null</span>, <span class="keyword">this</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           loaderManager.destroyLoader(id);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadFinished</span><span class="params">(Loader&lt;List&lt;PackageInfo&gt;&gt; loader, List&lt;PackageInfo&gt; data)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//获取到已安装的应用列表，调用AppViewInterface的showAppList方法</span></span><br><span class="line">           viewInterface.showAppList(data);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">launchApp</span><span class="params">(PackageInfo packageInfo)</span> </span>&#123;</span><br><span class="line">           Intent intent = appClassLoader.queryLaunchIntent(packageInfo);</span><br><span class="line">           <span class="keyword">if</span> (intent != <span class="keyword">null</span>)</span><br><span class="line">               appClassLoader.getContext().startActivity(intent);</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               Toast.makeText(appClassLoader.getContext(), <span class="string">"Can not start the app"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><p>关键方法是loadInstallApps，这个方法在MainActivity的onCreat中调用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Presenter appListPresenter;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">       setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">       Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">       setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">       FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();</span><br><span class="line">       AppListFragment appListFragment = AppListFragment.newInstance();</span><br><span class="line">       fragmentTransaction.add(R.id.fm, appListFragment);</span><br><span class="line">       fragmentTransaction.commit();</span><br><span class="line"></span><br><span class="line">       appListPresenter = <span class="keyword">new</span> AppListPresenter(appListFragment, <span class="keyword">new</span> AppClassLoader(getApplicationContext()), </span><br><span class="line">       getSupportLoaderManager());</span><br><span class="line"><span class="comment">//调用loadInstallApps</span></span><br><span class="line">       appListPresenter.loadInstallApps();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>首先，我们获取一个AppListFragment的实例，在AppListPresenter构造函数里面我们传入AppViewInterface，同时在AppPresenter的构造函数中又将presenter注入到了AppViewInerface里面，这样就实现了Presenter和ViewInerface双向绑定，之后调用AppPresenter的loadInstallApps方法，在onLoadFinished回调里面又调用了AppViewInterface的showApps方法，这样数据就显示在界面。整个Activity和Fragment的代码精简了很多。</p><p>####四.缺点<br>由于对视图的渲染放在了Presenter中，所以视图和Presenter的交互会过于频繁。还有一点需要明白，如果Presenter过多地渲染了视图，往往会使得它与特定的视图的联系过于紧密。一旦视图需要变更，那么Presenter也需要变更了</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;为什么需要软件设计模式？&quot;&gt;&lt;a href=&quot;#为什么需要软件设计模式？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要软件设计模式？&quot;&gt;&lt;/a&gt;为什么需要软件设计模式？&lt;/h4&gt;&lt;h5 id=&quot;我们先来定义什么是好的软件架构：&quot;&gt;&lt;a href=&quot;#我们先来定义什么是好的软件架构：&quot; class=&quot;headerlink&quot; title=&quot;我们先来定义什么是好的软件架构：&quot;&gt;&lt;/a&gt;我们先来定义什么是好的软件架构：&lt;/h5&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;软件架构上具有明确的分工，各个模块的功能职责平衡分配，且明确。&lt;/li&gt;
&lt;li&gt;可测试性，通常良好的软件架构都具备良好的可测试性。&lt;/li&gt;
&lt;li&gt;良好的易用性，维护成本低。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h6 id=&quot;为什么需要模块分工？&quot;&gt;&lt;a href=&quot;#为什么需要模块分工？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要模块分工？&quot;&gt;&lt;/a&gt;为什么需要模块分工？&lt;/h6&gt;&lt;p&gt;良好的模块分工，可以大大简化我们对代码的理解难度。虽然通过大量的开发工作，可以训练我们的大脑去分析越来越复杂的逻辑，但是人总有极限，而且简单的逻辑更容易理解、不容易出错，所以，遵循单一职责原则，将复杂的业务逻辑分解。&lt;br&gt;
    
    </summary>
    
      <category term="android" scheme="http://blog.hackyang.cn/categories/android/"/>
    
    
      <category term="Android" scheme="http://blog.hackyang.cn/tags/Android/"/>
    
      <category term="ios" scheme="http://blog.hackyang.cn/tags/ios/"/>
    
      <category term="mvp" scheme="http://blog.hackyang.cn/tags/mvp/"/>
    
  </entry>
  
</feed>
